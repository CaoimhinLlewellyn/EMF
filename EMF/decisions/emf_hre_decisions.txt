decisions = {
	emf_create_hre = {
		is_high_prio = yes
		
		potential = {
			had_global_flag = { flag = HIP days = 1 }
			has_global_flag = charlemagne_hre
			independent = yes
			tier = king
			is_feudal = yes
			or = {
				religion = catholic
				and = {
					religion = fraticelli
					is_title_active = d_fraticelii
				}
			}
			e_hre = {
				has_holder = no
			}
			has_landed_title = k_germany
		}
		allow = {
			has_landed_title = k_germany
			has_landed_title = k_lotharingia
			has_landed_title = k_italy
			realm_size = 180
			prestige = 1000
			war = no
			has_regent = no
		}
		revoke_allowed = {
			always = no
		}
		effect = {
			set_global_flag = emf_hre_formed
			set_character_flag = emf_hre_founder
			prestige = 1000
			
			if = {
				limit = { has_nickname = no }
				random_list = {
					60 = { give_nickname = nick_the_great }
					30 = { give_nickname = nick_the_restorer }
					10 = { give_nickname = nick_the_lawgiver }
					# TODO: the protector, the imperial/holy shield, the lacrosse player, the dude of dudes.
				}
			}
			
			primary_title = {
				e_hre = {
					grant_title = ROOT
					copy_title_laws = PREV
					succession = feudal_elective
				}
			}

			# Destroy kingdoms that are no longer needed.
			any_demesne_title = {
				limit = {
					tier = KING
					or = {
						title = k_lotharingia
						title = k_germany
						title = k_bavaria
						title = k_bohemia
					}
				}
				destroy_landed_title = THIS
			}
			
			# Map-specific de jure adjustments post-formation
			hidden_tooltip = { character_event = { id = emf_core.30 } }
			
			hidden_tooltip = { # TODO: Custom tooltip.
				add_character_modifier = {
					name = emf_cb_mod_dejure_kingdom_claim
					duration = 109500 # 30yr
					inherit = yes
				}
			}
			
			hidden_tooltip = { recalc_succession = yes }
		}
		ai_will_do = {
			factor = 1
		}
	}
	
	cb_restore_hre = {
		potential = {
			ai = no
			has_global_flag = charlemagne_hre
			not = { has_global_flag = emf_hre_formed }
			not = { year = 980 }
		}
		allow = {
			independent = yes
			
			# These guys are allowed to be reunification aggressors:
			or = {
				has_landed_title = k_italy
				has_landed_title = k_germany
				has_landed_title = k_lotharingia
				has_landed_title = k_france
				has_landed_title = k_bavaria
				has_landed_title = k_burgundy
				has_landed_title = k_aquitaine
			}
			
			# Must be the right religion for the HRE
			or = {
				religion = catholic
				and = {
					religion = fraticelli
					is_title_active = d_fraticelli
				}
			}
			
			# Must be one of the HRE cultures (players get a free pass)
			or = {
				ai = no
				culture = frankish
				culture = german
				culture = dutch
				culture = italian
				culture_group = italian_group
			}
			
			# Basics, yo...
			has_regent = no
			
			# Cooldown (lifetime for players, 15-year for AI)
			custom_tooltip = {
				text = emf_cb_debug_restore_hre_timer
				hidden_tooltip = {
					or = {
						not = { has_character_flag = emf_cb_restore_hre_timer }
						had_character_flag = { flag = emf_cb_restore_hre_timer days = 5475 }
					}
				}
			}
		}
		effect = {
		}
		ai_will_do = {
			factor = 0
		}
	}
	cb_restore_hre_italy = {
		potential = {
			ai = no
			has_global_flag = charlemagne_hre
			not = { has_global_flag = emf_hre_formed }
			not = { year = 980 }
		}
		allow = {
			k_italy = {
				not = { current_heir = { character = ROOT } } # Not if we're heir to this title
				
				# Strong claims should be used via claim or claim_all CBs, not here
				ROOT = { not = { has_strong_claim = PREV } }
				
				# Fulfill one of these:
				or = {
					ROOT = {
						or = {
							has_weak_claim = PREV # Attacker has a weak claim (yep, can be that simple)
							any_pretender_title = {
								title = PREVPREV # Attacker is a pretender to target title
							}
							custom_tooltip = {
								text = emf_cb_debug_restore_hre_ruled_2_hre_titles_10yr_each
								hidden_tooltip = {
									calc_true_if = { # Attacker already holds at least 2 of the HRE titles
										amount = 2
										and = {
											has_landed_title = k_italy
											k_italy = { ruled_years = 10 }
										}
										and = {
											has_landed_title = k_germany
											k_germany = { ruled_years = 10 }
										}
										and = {
											has_landed_title = k_lotharingia
											k_lotharingia = { ruled_years = 10 }
										}
										and = {
											has_landed_title = k_france
											k_france = { ruled_years = 10 }
										}
										and = {
											has_landed_title = k_bavaria
											k_bavaria = { ruled_years = 10 }
										}
										and = {
											has_landed_title = k_burgundy
											k_burgundy = { ruled_years = 10 }
										}
										and = {
											has_landed_title = k_aquitaine
											k_aquitaine = { ruled_years = 10 }
										}
									}
								}
							}
						}
					}
					and = { # Target title has zero CA, attacker primary title has CA >= medium
						has_law = crown_authority_0 # (rulers that can maintain decent CA are more fit to hold the title)
						ROOT = {
							custom_tooltip = {
								text = emf_cb_debug_restore_hre_core_title_w_medium_ca_plus
								hidden_tooltip = {
									primary_title = {
										or = {
											title = k_germany
											title = k_lotharingia
											title = k_france
											title = k_italy
											title = k_bavaria
											title = k_burgundy
											title = k_aquitaine
										}
										or = {
											has_law = crown_authority_2
											has_law = crown_authority_3
											has_law = crown_authority_4
										}
									}
								}
							}
						}
					}
				}
				
				# And target title is weak in one of these ways:
				or = {
					is_pretender = yes # Checks vs ROOT character: Attacker is pretender
					holder_scope = { has_regent = yes } # Regency
					and = { # Sexism
						ROOT = { is_female = no }
						holder_scope = { is_female = yes }
					}
					is_contested = yes # Is already being contested in some form of Claim or Succession War
					holder_scope = {
						or = {
							custom_tooltip = {
								text = emf_cb_debug_restore_hre_not_proper_religion
								hidden_tooltip = {
									not = { # Holder not of proper HRE religion
										religion = catholic
										and = {
											religion = fraticelli
											is_title_active = d_fraticelli
										}
									}
								}
							}
							custom_tooltip = {
								text = emf_cb_debug_restore_hre_not_proper_culture
								hidden_tooltip = {
									not = { # Holder not of proper HRE culture
										culture = frankish
										culture = german
										culture = dutch
										culture = italian
										culture_group = italian_group
									}
								}
							}
						}
					}
				}
				
				# And, finally, do not try to take target titles whose
				# de jure borders are not "roughly" adjacent to your
				# de facto realm borders. Adjacency test is "fuzzy" to
				# allow for cases where some mild border gore is merely
				# temporarily in the way of a direct/perfect adjacency.
				#
				# (More compute-intensive but impact is negligible and
				# the fuzzy match is far, far more flexible while promoting
				# more plausible reunification checkpoints than not checking
				# for adjacency at all-- avoiding what happens with the claim
				# CBs, e.g.)
				#
				# We require at least 1 attacker realm province to be within
				# 65 map distance of a de jure target province.
				
				custom_tooltip = {
					text = emf_cb_debug_fuzzy_de_jure_adjacent_to_realm
					hidden_tooltip = {
						any_direct_de_jure_vassal_title = { # Duchies of target...
							any_direct_de_jure_vassal_title = { # Counties of target...
								location = {
									ROOT = {
										any_realm_title = {
											tier = count
											location = { # Any realm province of the attacker (excluding provinces in which only a barony is held)...
												not = {
													distance = {
														where = PREVPREVPREV # That other target province
														distance = 50
													}
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
		effect = {
		}
		ai_will_do = {
			factor = 0
		}
	}
	cb_restore_hre_lotharingia = {
		potential = {
			ai = no
			has_global_flag = charlemagne_hre
			not = { has_global_flag = emf_hre_formed }
			not = { year = 980 }
		}
		allow = {
			k_lotharingia = {
				not = { current_heir = { character = ROOT } } # Not if we're heir to this title
				
				# Strong claims should be used via claim or claim_all CBs, not here
				ROOT = { not = { has_strong_claim = PREV } }
				
				# Fulfill one of these:
				or = {
					ROOT = {
						or = {
							has_weak_claim = PREV # Attacker has a weak claim (yep, can be that simple)
							any_pretender_title = {
								title = PREVPREV # Attacker is a pretender to target title
							}
							custom_tooltip = {
								text = emf_cb_debug_restore_hre_ruled_2_hre_titles_10yr_each
								hidden_tooltip = {
									calc_true_if = { # Attacker already holds at least 2 of the HRE titles
										amount = 2
										and = {
											has_landed_title = k_italy
											k_italy = { ruled_years = 10 }
										}
										and = {
											has_landed_title = k_germany
											k_germany = { ruled_years = 10 }
										}
										and = {
											has_landed_title = k_lotharingia
											k_lotharingia = { ruled_years = 10 }
										}
										and = {
											has_landed_title = k_france
											k_france = { ruled_years = 10 }
										}
										and = {
											has_landed_title = k_bavaria
											k_bavaria = { ruled_years = 10 }
										}
										and = {
											has_landed_title = k_burgundy
											k_burgundy = { ruled_years = 10 }
										}
										and = {
											has_landed_title = k_aquitaine
											k_aquitaine = { ruled_years = 10 }
										}
									}
								}
							}
						}
					}
					and = { # Target title has zero CA, attacker primary title has CA >= medium
						has_law = crown_authority_0 # (rulers that can maintain decent CA are more fit to hold the title)
						ROOT = {
							custom_tooltip = {
								text = emf_cb_debug_restore_hre_core_title_w_medium_ca_plus
								hidden_tooltip = {
									primary_title = {
										or = {
											title = k_germany
											title = k_lotharingia
											title = k_france
											title = k_italy
											title = k_bavaria
											title = k_burgundy
											title = k_aquitaine
										}
										or = {
											has_law = crown_authority_2
											has_law = crown_authority_3
											has_law = crown_authority_4
										}
									}
								}
							}
						}
					}
				}
				
				# And target title is weak in one of these ways:
				or = {
					is_pretender = yes # Checks vs ROOT character: Attacker is pretender
					holder_scope = { has_regent = yes } # Regency
					and = { # Sexism
						ROOT = { is_female = no }
						holder_scope = { is_female = yes }
					}
					is_contested = yes # Is already being contested in some form of Claim or Succession War
					holder_scope = {
						or = {
							custom_tooltip = {
								text = emf_cb_debug_restore_hre_not_proper_religion
								hidden_tooltip = {
									not = { # Holder not of proper HRE religion
										religion = catholic
										and = {
											religion = fraticelli
											is_title_active = d_fraticelli
										}
									}
								}
							}
							custom_tooltip = {
								text = emf_cb_debug_restore_hre_not_proper_culture
								hidden_tooltip = {
									not = { # Holder not of proper HRE culture
										culture = frankish
										culture = german
										culture = dutch
										culture = italian
										culture_group = italian_group
									}
								}
							}
						}
					}
				}
				
				# And, finally, do not try to take target titles whose
				# de jure borders are not "roughly" adjacent to your
				# de facto realm borders. Adjacency test is "fuzzy" to
				# allow for cases where some mild border gore is merely
				# temporarily in the way of a direct/perfect adjacency.
				#
				# (More compute-intensive but impact is negligible and
				# the fuzzy match is far, far more flexible while promoting
				# more plausible reunification checkpoints than not checking
				# for adjacency at all-- avoiding what happens with the claim
				# CBs, e.g.)
				#
				# We require at least 1 attacker realm province to be within
				# 65 map distance of a de jure target province.
				
				custom_tooltip = {
					text = emf_cb_debug_fuzzy_de_jure_adjacent_to_realm
					hidden_tooltip = {
						any_direct_de_jure_vassal_title = { # Duchies of target...
							any_direct_de_jure_vassal_title = { # Counties of target...
								location = {
									ROOT = {
										any_realm_title = {
											tier = count
											location = { # Any realm province of the attacker (excluding provinces in which only a barony is held)...
												not = {
													distance = {
														where = PREVPREVPREV # That other target province
														distance = 50
													}
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
		effect = {
		}
		ai_will_do = {
			factor = 0
		}
	}
	cb_restore_hre_germany = {
		potential = {
			ai = no
			has_global_flag = charlemagne_hre
			not = { has_global_flag = emf_hre_formed }
			not = { year = 980 }
		}
		allow = {
			k_germany = {
				not = { current_heir = { character = ROOT } } # Not if we're heir to this title
				
				# Strong claims should be used via claim or claim_all CBs, not here
				ROOT = { not = { has_strong_claim = PREV } }
				
				# Fulfill one of these:
				or = {
					ROOT = {
						or = {
							has_weak_claim = PREV # Attacker has a weak claim (yep, can be that simple)
							any_pretender_title = {
								title = PREVPREV # Attacker is a pretender to target title
							}
							custom_tooltip = {
								text = emf_cb_debug_restore_hre_ruled_2_hre_titles_10yr_each
								hidden_tooltip = {
									calc_true_if = { # Attacker already holds at least 2 of the HRE titles
										amount = 2
										and = {
											has_landed_title = k_italy
											k_italy = { ruled_years = 10 }
										}
										and = {
											has_landed_title = k_germany
											k_germany = { ruled_years = 10 }
										}
										and = {
											has_landed_title = k_lotharingia
											k_lotharingia = { ruled_years = 10 }
										}
										and = {
											has_landed_title = k_france
											k_france = { ruled_years = 10 }
										}
										and = {
											has_landed_title = k_bavaria
											k_bavaria = { ruled_years = 10 }
										}
										and = {
											has_landed_title = k_burgundy
											k_burgundy = { ruled_years = 10 }
										}
										and = {
											has_landed_title = k_aquitaine
											k_aquitaine = { ruled_years = 10 }
										}
									}
								}
							}
						}
					}
					and = { # Target title has zero CA, attacker primary title has CA >= medium
						has_law = crown_authority_0 # (rulers that can maintain decent CA are more fit to hold the title)
						ROOT = {
							custom_tooltip = {
								text = emf_cb_debug_restore_hre_core_title_w_medium_ca_plus
								hidden_tooltip = {
									primary_title = {
										or = {
											title = k_germany
											title = k_lotharingia
											title = k_france
											title = k_italy
											title = k_bavaria
											title = k_burgundy
											title = k_aquitaine
										}
										or = {
											has_law = crown_authority_2
											has_law = crown_authority_3
											has_law = crown_authority_4
										}
									}
								}
							}
						}
					}
				}
				
				# And target title is weak in one of these ways:
				or = {
					is_pretender = yes # Checks vs ROOT character: Attacker is pretender
					holder_scope = { has_regent = yes } # Regency
					and = { # Sexism
						ROOT = { is_female = no }
						holder_scope = { is_female = yes }
					}
					is_contested = yes # Is already being contested in some form of Claim or Succession War
					holder_scope = {
						or = {
							custom_tooltip = {
								text = emf_cb_debug_restore_hre_not_proper_religion
								hidden_tooltip = {
									not = { # Holder not of proper HRE religion
										religion = catholic
										and = {
											religion = fraticelli
											is_title_active = d_fraticelli
										}
									}
								}
							}
							custom_tooltip = {
								text = emf_cb_debug_restore_hre_not_proper_culture
								hidden_tooltip = {
									not = { # Holder not of proper HRE culture
										culture = frankish
										culture = german
										culture = dutch
										culture = italian
										culture_group = italian_group
									}
								}
							}
						}
					}
				}
				
				# And, finally, do not try to take target titles whose
				# de jure borders are not "roughly" adjacent to your
				# de facto realm borders. Adjacency test is "fuzzy" to
				# allow for cases where some mild border gore is merely
				# temporarily in the way of a direct/perfect adjacency.
				#
				# (More compute-intensive but impact is negligible and
				# the fuzzy match is far, far more flexible while promoting
				# more plausible reunification checkpoints than not checking
				# for adjacency at all-- avoiding what happens with the claim
				# CBs, e.g.)
				#
				# We require at least 1 attacker realm province to be within
				# 65 map distance of a de jure target province.
				
				custom_tooltip = {
					text = emf_cb_debug_fuzzy_de_jure_adjacent_to_realm
					hidden_tooltip = {
						any_direct_de_jure_vassal_title = { # Duchies of target...
							any_direct_de_jure_vassal_title = { # Counties of target...
								location = {
									ROOT = {
										any_realm_title = {
											tier = count
											location = { # Any realm province of the attacker (excluding provinces in which only a barony is held)...
												not = {
													distance = {
														where = PREVPREVPREV # That other target province
														distance = 50
													}
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
		effect = {
		}
		ai_will_do = {
			factor = 0
		}
	}
	cb_restore_hre_bavaria = {
		potential = {
			ai = no
			has_global_flag = charlemagne_hre
			not = { has_global_flag = emf_hre_formed }
			not = { year = 980 }
		}
		allow = {
			k_bavaria = {
				not = { current_heir = { character = ROOT } } # Not if we're heir to this title
				
				# Strong claims should be used via claim or claim_all CBs, not here
				ROOT = { not = { has_strong_claim = PREV } }
				
				# Fulfill one of these:
				or = {
					ROOT = {
						or = {
							has_weak_claim = PREV # Attacker has a weak claim (yep, can be that simple)
							any_pretender_title = {
								title = PREVPREV # Attacker is a pretender to target title
							}
							custom_tooltip = {
								text = emf_cb_debug_restore_hre_ruled_2_hre_titles_10yr_each
								hidden_tooltip = {
									calc_true_if = { # Attacker already holds at least 2 of the HRE titles
										amount = 2
										and = {
											has_landed_title = k_italy
											k_italy = { ruled_years = 10 }
										}
										and = {
											has_landed_title = k_germany
											k_germany = { ruled_years = 10 }
										}
										and = {
											has_landed_title = k_lotharingia
											k_lotharingia = { ruled_years = 10 }
										}
										and = {
											has_landed_title = k_france
											k_france = { ruled_years = 10 }
										}
										and = {
											has_landed_title = k_bavaria
											k_bavaria = { ruled_years = 10 }
										}
										and = {
											has_landed_title = k_burgundy
											k_burgundy = { ruled_years = 10 }
										}
										and = {
											has_landed_title = k_aquitaine
											k_aquitaine = { ruled_years = 10 }
										}
									}
								}
							}
						}
					}
					and = { # Target title has zero CA, attacker primary title has CA >= medium
						has_law = crown_authority_0 # (rulers that can maintain decent CA are more fit to hold the title)
						ROOT = {
							custom_tooltip = {
								text = emf_cb_debug_restore_hre_core_title_w_medium_ca_plus
								hidden_tooltip = {
									primary_title = {
										or = {
											title = k_germany
											title = k_lotharingia
											title = k_france
											title = k_italy
											title = k_bavaria
											title = k_burgundy
											title = k_aquitaine
										}
										or = {
											has_law = crown_authority_2
											has_law = crown_authority_3
											has_law = crown_authority_4
										}
									}
								}
							}
						}
					}
				}
				
				# And target title is weak in one of these ways:
				or = {
					is_pretender = yes # Checks vs ROOT character: Attacker is pretender
					holder_scope = { has_regent = yes } # Regency
					and = { # Sexism
						ROOT = { is_female = no }
						holder_scope = { is_female = yes }
					}
					is_contested = yes # Is already being contested in some form of Claim or Succession War
					holder_scope = {
						or = {
							custom_tooltip = {
								text = emf_cb_debug_restore_hre_not_proper_religion
								hidden_tooltip = {
									not = { # Holder not of proper HRE religion
										religion = catholic
										and = {
											religion = fraticelli
											is_title_active = d_fraticelli
										}
									}
								}
							}
							custom_tooltip = {
								text = emf_cb_debug_restore_hre_not_proper_culture
								hidden_tooltip = {
									not = { # Holder not of proper HRE culture
										culture = frankish
										culture = german
										culture = dutch
										culture = italian
										culture_group = italian_group
									}
								}
							}
						}
					}
				}
				
				# And, finally, do not try to take target titles whose
				# de jure borders are not "roughly" adjacent to your
				# de facto realm borders. Adjacency test is "fuzzy" to
				# allow for cases where some mild border gore is merely
				# temporarily in the way of a direct/perfect adjacency.
				#
				# (More compute-intensive but impact is negligible and
				# the fuzzy match is far, far more flexible while promoting
				# more plausible reunification checkpoints than not checking
				# for adjacency at all-- avoiding what happens with the claim
				# CBs, e.g.)
				#
				# We require at least 1 attacker realm province to be within
				# 65 map distance of a de jure target province.
				
				custom_tooltip = {
					text = emf_cb_debug_fuzzy_de_jure_adjacent_to_realm
					hidden_tooltip = {
						any_direct_de_jure_vassal_title = { # Duchies of target...
							any_direct_de_jure_vassal_title = { # Counties of target...
								location = {
									ROOT = {
										any_realm_title = {
											tier = count
											location = { # Any realm province of the attacker (excluding provinces in which only a barony is held)...
												not = {
													distance = {
														where = PREVPREVPREV # That other target province
														distance = 50
													}
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
		effect = {
		}
		ai_will_do = {
			factor = 0
		}
	}
	cb_restore_hre_burgundy = {
		potential = {
			ai = no
			has_global_flag = charlemagne_hre
			not = { has_global_flag = emf_hre_formed }
			not = { year = 980 }
		}
		allow = {
			k_burgundy = {
				not = { current_heir = { character = ROOT } } # Not if we're heir to this title
				
				# Strong claims should be used via claim or claim_all CBs, not here
				ROOT = { not = { has_strong_claim = PREV } }
				
				# Fulfill one of these:
				or = {
					ROOT = {
						or = {
							has_weak_claim = PREV # Attacker has a weak claim (yep, can be that simple)
							any_pretender_title = {
								title = PREVPREV # Attacker is a pretender to target title
							}
							custom_tooltip = {
								text = emf_cb_debug_restore_hre_ruled_2_hre_titles_10yr_each
								hidden_tooltip = {
									calc_true_if = { # Attacker already holds at least 2 of the HRE titles
										amount = 2
										and = {
											has_landed_title = k_italy
											k_italy = { ruled_years = 10 }
										}
										and = {
											has_landed_title = k_germany
											k_germany = { ruled_years = 10 }
										}
										and = {
											has_landed_title = k_lotharingia
											k_lotharingia = { ruled_years = 10 }
										}
										and = {
											has_landed_title = k_france
											k_france = { ruled_years = 10 }
										}
										and = {
											has_landed_title = k_bavaria
											k_bavaria = { ruled_years = 10 }
										}
										and = {
											has_landed_title = k_burgundy
											k_burgundy = { ruled_years = 10 }
										}
										and = {
											has_landed_title = k_aquitaine
											k_aquitaine = { ruled_years = 10 }
										}
									}
								}
							}
						}
					}
					and = { # Target title has zero CA, attacker primary title has CA >= medium
						has_law = crown_authority_0 # (rulers that can maintain decent CA are more fit to hold the title)
						ROOT = {
							custom_tooltip = {
								text = emf_cb_debug_restore_hre_core_title_w_medium_ca_plus
								hidden_tooltip = {
									primary_title = {
										or = {
											title = k_germany
											title = k_lotharingia
											title = k_france
											title = k_italy
											title = k_bavaria
											title = k_burgundy
											title = k_aquitaine
										}
										or = {
											has_law = crown_authority_2
											has_law = crown_authority_3
											has_law = crown_authority_4
										}
									}
								}
							}
						}
					}
				}
				
				# And target title is weak in one of these ways:
				or = {
					is_pretender = yes # Checks vs ROOT character: Attacker is pretender
					holder_scope = { has_regent = yes } # Regency
					and = { # Sexism
						ROOT = { is_female = no }
						holder_scope = { is_female = yes }
					}
					is_contested = yes # Is already being contested in some form of Claim or Succession War
					holder_scope = {
						or = {
							custom_tooltip = {
								text = emf_cb_debug_restore_hre_not_proper_religion
								hidden_tooltip = {
									not = { # Holder not of proper HRE religion
										religion = catholic
										and = {
											religion = fraticelli
											is_title_active = d_fraticelli
										}
									}
								}
							}
							custom_tooltip = {
								text = emf_cb_debug_restore_hre_not_proper_culture
								hidden_tooltip = {
									not = { # Holder not of proper HRE culture
										culture = frankish
										culture = german
										culture = dutch
										culture = italian
										culture_group = italian_group
									}
								}
							}
						}
					}
				}
				
				# And, finally, do not try to take target titles whose
				# de jure borders are not "roughly" adjacent to your
				# de facto realm borders. Adjacency test is "fuzzy" to
				# allow for cases where some mild border gore is merely
				# temporarily in the way of a direct/perfect adjacency.
				#
				# (More compute-intensive but impact is negligible and
				# the fuzzy match is far, far more flexible while promoting
				# more plausible reunification checkpoints than not checking
				# for adjacency at all-- avoiding what happens with the claim
				# CBs, e.g.)
				#
				# We require at least 1 attacker realm province to be within
				# 65 map distance of a de jure target province.
				
				custom_tooltip = {
					text = emf_cb_debug_fuzzy_de_jure_adjacent_to_realm
					hidden_tooltip = {
						any_direct_de_jure_vassal_title = { # Duchies of target...
							any_direct_de_jure_vassal_title = { # Counties of target...
								location = {
									ROOT = {
										any_realm_title = {
											tier = count
											location = { # Any realm province of the attacker (excluding provinces in which only a barony is held)...
												not = {
													distance = {
														where = PREVPREVPREV # That other target province
														distance = 50
													}
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
		effect = {
		}
		ai_will_do = {
			factor = 0
		}
	}
	cb_restore_hre_france = {
		potential = {
			ai = no
			has_global_flag = charlemagne_hre
			not = { has_global_flag = emf_hre_formed }
			not = { year = 980 }
		}
		allow = {
			k_france = {
				not = { current_heir = { character = ROOT } } # Not if we're heir to this title
				
				# Strong claims should be used via claim or claim_all CBs, not here
				ROOT = { not = { has_strong_claim = PREV } }
				
				# Fulfill one of these:
				or = {
					ROOT = {
						or = {
							has_weak_claim = PREV # Attacker has a weak claim (yep, can be that simple)
							any_pretender_title = {
								title = PREVPREV # Attacker is a pretender to target title
							}
							custom_tooltip = {
								text = emf_cb_debug_restore_hre_ruled_2_hre_titles_10yr_each
								hidden_tooltip = {
									calc_true_if = { # Attacker already holds at least 2 of the HRE titles
										amount = 2
										and = {
											has_landed_title = k_italy
											k_italy = { ruled_years = 10 }
										}
										and = {
											has_landed_title = k_germany
											k_germany = { ruled_years = 10 }
										}
										and = {
											has_landed_title = k_lotharingia
											k_lotharingia = { ruled_years = 10 }
										}
										and = {
											has_landed_title = k_france
											k_france = { ruled_years = 10 }
										}
										and = {
											has_landed_title = k_bavaria
											k_bavaria = { ruled_years = 10 }
										}
										and = {
											has_landed_title = k_burgundy
											k_burgundy = { ruled_years = 10 }
										}
										and = {
											has_landed_title = k_aquitaine
											k_aquitaine = { ruled_years = 10 }
										}
									}
								}
							}
						}
					}
					and = { # Target title has zero CA, attacker primary title has CA >= medium
						has_law = crown_authority_0 # (rulers that can maintain decent CA are more fit to hold the title)
						ROOT = {
							custom_tooltip = {
								text = emf_cb_debug_restore_hre_core_title_w_medium_ca_plus
								hidden_tooltip = {
									primary_title = {
										or = {
											title = k_germany
											title = k_lotharingia
											title = k_france
											title = k_italy
											title = k_bavaria
											title = k_burgundy
											title = k_aquitaine
										}
										or = {
											has_law = crown_authority_2
											has_law = crown_authority_3
											has_law = crown_authority_4
										}
									}
								}
							}
						}
					}
				}
				
				# And target title is weak in one of these ways:
				or = {
					is_pretender = yes # Checks vs ROOT character: Attacker is pretender
					holder_scope = { has_regent = yes } # Regency
					and = { # Sexism
						ROOT = { is_female = no }
						holder_scope = { is_female = yes }
					}
					is_contested = yes # Is already being contested in some form of Claim or Succession War
					holder_scope = {
						or = {
							custom_tooltip = {
								text = emf_cb_debug_restore_hre_not_proper_religion
								hidden_tooltip = {
									not = { # Holder not of proper HRE religion
										religion = catholic
										and = {
											religion = fraticelli
											is_title_active = d_fraticelli
										}
									}
								}
							}
							custom_tooltip = {
								text = emf_cb_debug_restore_hre_not_proper_culture
								hidden_tooltip = {
									not = { # Holder not of proper HRE culture
										culture = frankish
										culture = german
										culture = dutch
										culture = italian
										culture_group = italian_group
									}
								}
							}
						}
					}
				}
				
				# And, finally, do not try to take target titles whose
				# de jure borders are not "roughly" adjacent to your
				# de facto realm borders. Adjacency test is "fuzzy" to
				# allow for cases where some mild border gore is merely
				# temporarily in the way of a direct/perfect adjacency.
				#
				# (More compute-intensive but impact is negligible and
				# the fuzzy match is far, far more flexible while promoting
				# more plausible reunification checkpoints than not checking
				# for adjacency at all-- avoiding what happens with the claim
				# CBs, e.g.)
				#
				# We require at least 1 attacker realm province to be within
				# 65 map distance of a de jure target province.
				
				custom_tooltip = {
					text = emf_cb_debug_fuzzy_de_jure_adjacent_to_realm
					hidden_tooltip = {
						any_direct_de_jure_vassal_title = { # Duchies of target...
							any_direct_de_jure_vassal_title = { # Counties of target...
								location = {
									ROOT = {
										any_realm_title = {
											tier = count
											location = { # Any realm province of the attacker (excluding provinces in which only a barony is held)...
												not = {
													distance = {
														where = PREVPREVPREV # That other target province
														distance = 50
													}
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
		effect = {
		}
		ai_will_do = {
			factor = 0
		}
	}
	cb_restore_hre_aquitaine = {
		potential = {
			ai = no
			has_global_flag = charlemagne_hre
			not = { has_global_flag = emf_hre_formed }
			not = { year = 980 }
		}
		allow = {
			k_aquitaine = {
				not = { current_heir = { character = ROOT } } # Not if we're heir to this title
				
				# Strong claims should be used via claim or claim_all CBs, not here
				ROOT = { not = { has_strong_claim = PREV } }
				
				# Fulfill one of these:
				or = {
					ROOT = {
						or = {
							has_weak_claim = PREV # Attacker has a weak claim (yep, can be that simple)
							any_pretender_title = {
								title = PREVPREV # Attacker is a pretender to target title
							}
							custom_tooltip = {
								text = emf_cb_debug_restore_hre_ruled_2_hre_titles_10yr_each
								hidden_tooltip = {
									calc_true_if = { # Attacker already holds at least 2 of the HRE titles
										amount = 2
										and = {
											has_landed_title = k_italy
											k_italy = { ruled_years = 10 }
										}
										and = {
											has_landed_title = k_germany
											k_germany = { ruled_years = 10 }
										}
										and = {
											has_landed_title = k_lotharingia
											k_lotharingia = { ruled_years = 10 }
										}
										and = {
											has_landed_title = k_france
											k_france = { ruled_years = 10 }
										}
										and = {
											has_landed_title = k_bavaria
											k_bavaria = { ruled_years = 10 }
										}
										and = {
											has_landed_title = k_burgundy
											k_burgundy = { ruled_years = 10 }
										}
										and = {
											has_landed_title = k_aquitaine
											k_aquitaine = { ruled_years = 10 }
										}
									}
								}
							}
						}
					}
					and = { # Target title has zero CA, attacker primary title has CA >= medium
						has_law = crown_authority_0 # (rulers that can maintain decent CA are more fit to hold the title)
						ROOT = {
							custom_tooltip = {
								text = emf_cb_debug_restore_hre_core_title_w_medium_ca_plus
								hidden_tooltip = {
									primary_title = {
										or = {
											title = k_germany
											title = k_lotharingia
											title = k_france
											title = k_italy
											title = k_bavaria
											title = k_burgundy
											title = k_aquitaine
										}
										or = {
											has_law = crown_authority_2
											has_law = crown_authority_3
											has_law = crown_authority_4
										}
									}
								}
							}
						}
					}
				}
				
				# And target title is weak in one of these ways:
				or = {
					is_pretender = yes # Checks vs ROOT character: Attacker is pretender
					holder_scope = { has_regent = yes } # Regency
					and = { # Sexism
						ROOT = { is_female = no }
						holder_scope = { is_female = yes }
					}
					is_contested = yes # Is already being contested in some form of Claim or Succession War
					holder_scope = {
						or = {
							custom_tooltip = {
								text = emf_cb_debug_restore_hre_not_proper_religion
								hidden_tooltip = {
									not = { # Holder not of proper HRE religion
										religion = catholic
										and = {
											religion = fraticelli
											is_title_active = d_fraticelli
										}
									}
								}
							}
							custom_tooltip = {
								text = emf_cb_debug_restore_hre_not_proper_culture
								hidden_tooltip = {
									not = { # Holder not of proper HRE culture
										culture = frankish
										culture = german
										culture = dutch
										culture = italian
										culture_group = italian_group
									}
								}
							}
						}
					}
				}
				
				# And, finally, do not try to take target titles whose
				# de jure borders are not "roughly" adjacent to your
				# de facto realm borders. Adjacency test is "fuzzy" to
				# allow for cases where some mild border gore is merely
				# temporarily in the way of a direct/perfect adjacency.
				#
				# (More compute-intensive but impact is negligible and
				# the fuzzy match is far, far more flexible while promoting
				# more plausible reunification checkpoints than not checking
				# for adjacency at all-- avoiding what happens with the claim
				# CBs, e.g.)
				#
				# We require at least 1 attacker realm province to be within
				# 65 map distance of a de jure target province.
				
				custom_tooltip = {
					text = emf_cb_debug_fuzzy_de_jure_adjacent_to_realm
					hidden_tooltip = {
						any_direct_de_jure_vassal_title = { # Duchies of target...
							any_direct_de_jure_vassal_title = { # Counties of target...
								location = {
									ROOT = {
										any_realm_title = {
											tier = count
											location = { # Any realm province of the attacker (excluding provinces in which only a barony is held)...
												not = {
													distance = {
														where = PREVPREVPREV # That other target province
														distance = 50
													}
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
		effect = {
		}
		ai_will_do = {
			factor = 0
		}
	}
}
