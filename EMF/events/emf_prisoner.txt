namespace = emf_prisoner

## Ransom All events
## 0-9 reserved
# These are hideous and badly need some attention
character_event = {
	id = emf_prisoner.0
	desc = emf_prisoner.0.desc
	picture = GFX_evt_into_the_dungeon
	is_triggered_only = yes

	option = { # Will pay
		name = emf_prisoner.0.a
		
		# Plus/Minus values
		# Close Relative = +5
		# Base Reluctance = -2
		
		# Collected values:
		# Non-rulers:
		# Male primary heir of duke: 46 (Norse)
		# Female spouse of duke: 46 (Norse)
		# Female bastard child of king: 74
		# Female child of king: 74
		# Dynasty member of king: 10
		# Noble wife of emperor: 10
		# 9 year old son of emperor: 110
		# 13 year old daughter of emperor: 110
		# 6 year old primary heir of emperor: 110
		# Noble countess wife of emperor: 70
		
		# Rulers ransom themselves, always
		# Non-rulers are ransomed by their lieges
		# Non-rulers are only ransomed if they're "close relatives"
		
		#			Ruler	Relative	Dynasty
		# Emp = 	385		110			10
		# King = 	250		74
		# Duke = 	145		46
		# Count = 	70		21?
		# Baron = 	25		7.5?
		
		# Wiki says: generally, AI rulers will accept offers to ransom themselves, spouses, close kin, or courtiers rich enough to reimburse the ransom. The AI will often refuse to grant ransom to characters who hold claims on their titles. 
		
		#require money for ransom
		if = {
			limit = {
				tier = emperor
				wealth = 385
			}
			wealth = -385
			host = { wealth = 385 }
			prisoner = no
		}
		
		if = {
			limit = {
				tier = king
				wealth = 250
			}
			
			wealth = -250
			host = { wealth = 250 }
			prisoner = no
		}
		
		if = {
			limit = {
				tier = duke
				wealth = 145
			}
			
			wealth = -145
			host = { wealth = 145 }
			prisoner = no
		}
		
		if = {
			limit = {
				tier = count
				wealth = 70
			}
			
			wealth = -70
			host = { wealth = 70 }
			prisoner = no
		}
		
		if = {
			limit = {
				tier = baron
				wealth = 25
			}
			
			wealth = -25
			host = { wealth = 25 }
			prisoner = no
		}
		
		if = {
			limit = {
				is_ruler = no
				wealth = 10
			}

			wealth = -10
			host = { wealth = 10 }
			prisoner = no
		}
		
		if = {
			limit = {
				is_ruler = no
				prisoner = yes
				father = {
					wealth = 26
					current_heir = { character = ROOT }
					ai = no
				}
			}
			father = { wealth = -26 }
			host = { wealth = 26 }
			prisoner = no
		}
		
		if = {
			limit = {
				is_ruler = no
				prisoner = yes
				mother = {
					wealth = 26
					current_heir = { character = ROOT }
					ai = no
				}
			}
			mother = { wealth = -26 }
			host = { wealth = 26 }
		}
		
		if = {
			limit = {
				is_ruler = no
				prisoner = yes
				NOT = { wealth = 10 }
			} 
			liege = { character_event = { id = emf_prisoner.1 } }
		}
		ai_chance = { factor = 100 }
	}
	
	option = {
		name = emf_prisoner.0.b # will not pay
		ai_chance = {
			factor = 0
		}
	}
}


character_event = {
	id = emf_prisoner.1
	desc = emf_prisoner.1.desc
	picture = GFX_evt_into_the_dungeon
	is_triggered_only = yes

	option = {
		name = emf_prisoner.1.a # Will pay
		
		ai_chance = { 
			factor = 1
			modifier = {
				factor = 2 
				trait = charitable
			}
			modifier = {
				factor = 2 
				trait = kind
			}
			modifier = {
				factor = 2 
				trait = just
			}
			modifier = {
				factor = 1.25 
				wealth = 200
			}
			modifier = {
				factor = 1.5 
				wealth = 250
			}
			modifier = {
				factor = 2 
				wealth = 300
			}
			modifier = {
				factor = 50 
				wealth = 400
			}
			modifier = {
				factor = 100 
				wealth = 500
			}
			modifier = {
				factor = 100 
				FROM = { is_close_relative = ROOT } 
			}
			
		}#ai

		ROOT = { wealth = -10 }
		FROMFROM = { wealth = 10 }
		
		FROM = { prisoner = no }

	}#opt
	option = {
		name = emf_prisoner.1.b #will not

		ai_chance = {
			factor = 0.5
			modifier = {
				factor = 2 
				trait = greedy
			}
			modifier = {
				factor = 2 
				trait = wroth
			}
			modifier = {
				factor = 1.5 
				trait = cruel
			}
			modifier = {
				factor = 2.5 
				NOT = { wealth = 75 } 
			}
			modifier = {
				factor = 5 
				NOT = { wealth = 50 } 
			}
			modifier = {
				factor = 10 
				NOT = { wealth = 25} 
			}
			

		}#ai
		FROMFROM = { character_event = { id = emf_prisoner.2 } }

	}#opt

}#evt



character_event = {
	id = emf_prisoner.2
	desc = emf_prisoner.2.desc
	picture = GFX_evt_into_the_dungeon
	is_triggered_only = yes

	option = {
		name = emf_prisoner.2.a # denied

	}#opt
}#evt


## Prisoner Exchange events
## 10-19 reserved
# These also badly need to be fixed up
#Prisoner exchange
character_event = {
	id = emf_prisoner.10
	desc = meneth.213.desc
	picture = GFX_evt_emissary
	border = GFX_event_normal_frame_diplomacy
	is_triggered_only = yes
	
	option = {
		name = meneth.213.a
		trigger = {
			FROMFROM = {
				any_courtier = {
					dynasty = ROOT
					prisoner = yes
					is_landed = no
				}
			}
		}
		FROMFROM = { clr_character_flag = prisoner_exchange_attempted }
		FROM = {
			prisoner = no
		}
		FROMFROM = {
			random_courtier = {
				limit = {
					is_close_relative = ROOT
					dynasty = ROOT
					prisoner = yes
					is_landed = no
				}
				prisoner = no
			}
			if = {
				limit = {
					NOT = {
						any_courtier = {
							is_close_relative = ROOT
							dynasty = ROOT
							prisoner = yes
							is_landed = no
						}
					}
				}
				random_courtier = {
					limit = {
						dynasty = ROOT
						prisoner = yes
						is_landed = no
					}
					prisoner = no
				}
			}
			character_event = { id = emf_prisoner.11 } #Prisoner exchange succeeded
		}
	}
	option = {
		name = meneth.213.b
		trigger = {
			OR = {
				ai = no
				NOT = {
					FROMFROM = {
						any_courtier = {
							dynasty = ROOT
							prisoner = yes
							is_landed = no
						}
					}
				}
			}
		}
		FROMFROM = { clr_character_flag = prisoner_exchange_attempted }
		FROMFROM = { character_event = { id = emf_prisoner.12 } } #Prisoner exchange fails
	}
}

#Prisoner exchange succeeds
character_event = {
	id = emf_prisoner.11
	desc = meneth.214.desc
	picture = GFX_evt_garden
	border = GFX_event_normal_frame_diplomacy
	is_triggered_only = yes
	
	option = {
		name = EXCELLENT
	}
}

#Prisoner exchange fails
character_event = {
	id = emf_prisoner.12
	desc = meneth.215.desc
	picture = GFX_evt_into_the_dungeon
	border = GFX_event_normal_frame_diplomacy
	is_triggered_only = yes
	
	option = {
		name = CURSES
	}
}


## Prisoner Handling events
## 20-29 reserved
# House Arrest event
character_event = {
	id = emf_prisoner.20
	# Adults, more or less
	desc = {
		text = emf_prisoner.20.desc_dungeon
		trigger = {
			has_character_modifier = the_dungeon
			age = 12
			not = { trait = incapable }
		}
	}
	desc = {
		text = emf_prisoner.20.desc_oubliette
		trigger = {
			has_character_modifier = the_oubliette
			age = 12
			not = { trait = incapable }
		}
	}
	# Kids
	desc = {
		text = emf_prisoner.20.desc_kid
		trigger = {
			age = 4
			not = { age = 12 }
			not = { trait = incapable }
		}
	}
	# Incapable or very young
	desc = {
		text = emf_prisoner.20.desc_incapable
		trigger = {
			or = {
				not = { age = 4 }
				trait = incapable
			}
		}
	}
	picture = GFX_evt_into_the_dungeon
	border = GFX_event_normal_frame_intrigue
	is_triggered_only = yes
	
	option = {
		name = { # Adult, more or less
			text = emf_prisoner.20.a_adult
			trigger = {
				age = 12
				not = { trait = incapable }
			}
		}
		name = {
			text = emf_prisoner.20.a_kid
			trigger = {
				age = 4
				not = { age = 12 }
				not = { trait = incapable }
			}
		}
		name = {
			text = emf_prisoner.20.a_incapable
			trigger = {
				or = {
					not = { age = 4 }
					trait = incapable
				}
			}
		}

		hidden_tooltip = {
			remove_character_modifier = house_arrest
			remove_character_modifier = the_dungeon
			remove_character_modifier = the_oubliette
		}
		if = {
			limit = { prisoner = yes }
			add_character_modifier = { 
				name = house_arrest
				duration = -1
			}
		}
	}
}

# Oubliette event
character_event = {
	id = emf_prisoner.21
	# Adult, more or less
	desc = {
		text = emf_prisoner.21.desc_house
		trigger = {
			has_character_modifier = house_arrest
			age = 12
			not = { trait = incapable }
		}
	}
	desc = {
		text = emf_prisoner.21.desc_dungeon
		trigger = {
			has_character_modifier = the_dungeon
			age = 12
			not = { trait = incapable }
		}
	}
	# Kids
	desc = {
		text = emf_prisoner.21.desc_kid_house
		trigger = {
			has_character_modifier = house_arrest
			age = 4
			not = { age = 12 }
			not = { trait = incapable }
		}
	}
	desc = {
		text = emf_prisoner.21.desc_kid_dungeon
		trigger = {
			has_character_modifier = the_dungeon
			age = 4
			not = { age = 12 }
			not = { trait = incapable }
		}
	}
	# Incapable or very young
	desc = {
		text = emf_prisoner.21.desc_incapable
		trigger = {
			or = {
				not = { age = 4 }
				trait = incapable
			}
		}
	}
	picture = GFX_evt_into_the_dungeon
	border = GFX_event_normal_frame_intrigue
	is_triggered_only = yes
	
	option = {
		name = { # Adult, more or less
			text = emf_prisoner.21.a_adult
			trigger = {
				age = 12
				not = { trait = incapable }
			}
		}
		name = { # Kid from house arrest
			text = emf_prisoner.21.a_kid_house
			trigger = {
				has_character_modifier = house_arrest
				age = 4
				not = { age = 12 }
				not = { trait = incapable }
			}
		}
		name = { # Kid from dungeon
			text = emf_prisoner.21.a_kid_dungeon
			trigger = {
				has_character_modifier = the_dungeon
				age = 4
				not = { age = 12 }
				not = { trait = incapable }
			}
		}
		name = { # Incapable or very young
			text = emf_prisoner.21.a_incapable
			trigger = {
				or = {
					not = { age = 4 }
					trait = incapable
				}
			}
		}

		hidden_tooltip = {
			remove_character_modifier = house_arrest
			remove_character_modifier = the_dungeon
			remove_character_modifier = the_oubliette
		}
		if = {
			limit = { prisoner = yes }
			add_character_modifier = { 
				name = the_oubliette
				duration = -1
			}
		}
	}
}

# Dungeon event
character_event = {
	id = emf_prisoner.22
	# Adult
	desc = {
		text = emf_prisoner.22.desc_house
		trigger = {
			has_character_modifier = house_arrest
			age = 12
			not = { trait = incapable }
		}
	}
	desc = {
		text = emf_prisoner.22.desc_oubliette
		trigger = {
			has_character_modifier = the_oubliette
			age = 12
			not = { trait = incapable }
		}
	}
	# Kids
	desc = {
		text = emf_prisoner.22.desc_kid_house
		trigger = {
			has_character_modifier = house_arrest
			age = 4
			not = { age = 12 }
			not = { trait = incapable }
		}
	}
	desc = {
		text = emf_prisoner.22.desc_kid_oubliette
		trigger = {
			has_character_modifier = the_oubliette
			age = 4
			not = { age = 12 }
			not = { trait = incapable }
		}
	}
	# Incapable or very young
	desc = {
		text = emf_prisoner.22.desc_incapable
		trigger = {
			or = {
				not = { age = 4 }
				trait = incapable
			}
		}
	}
	picture = GFX_evt_into_the_dungeon
	border = GFX_event_normal_frame_intrigue
	is_triggered_only = yes
	
	option = {
		# Adult
		name = {
			text = emf_prisoner.22.a_house
			trigger = {
				has_character_modifier = house_arrest
				age = 12
				not = { trait = incapable }
			}
		}
		name = {
			text = emf_prisoner.22.a_oubliette
			trigger = {
				has_character_modifier = the_oubliette
				age = 12
				not = { trait = incapable }
			}
		}
		# Kids
		name = {
			text = emf_prisoner.22.a_kid_house
			trigger = {
				has_character_modifier = house_arrest
				age = 4
				not = { age = 12 }
				not = { trait = incapable }
			}
		}
		name = {
			text = emf_prisoner.22.a_kid_oubliette
			trigger = {
				has_character_modifier = the_oubliette
				age = 4
				not = { age = 12 }
				not = { trait = incapable }
			}
		}
		# Incapable or very young
		name = {
			text = emf_prisoner.22.a_incapable
			trigger = {
				or = {
					not = { age = 4 }
					trait = incapable
				}
			}
		}

		hidden_tooltip = {
			remove_character_modifier = house_arrest
			remove_character_modifier = the_dungeon
			remove_character_modifier = the_oubliette
		}
		if = {
			limit = { prisoner = yes }
			add_character_modifier = { 
				name = the_dungeon
				duration = -1
			}
		}
	}
}

## Prisoner Transfer events
## 30-39 reserved
# Liege requests prisoner transfer - FROMFROM is liege, FROM is prisoner
character_event = {
	id = emf_prisoner.30
	desc = emf_prisoner.30.desc
	picture = GFX_evt_into_the_dungeon
	hide_from = yes
	show_from_from = yes
	is_triggered_only = yes
	
	option = { # Transfer prisoner
		name = emf_prisoner.30.a
		
		FROM = {
			prisoner = no
			imprison = FROMFROM
		}
		ai_chance = {
			factor = 4
			modifier = {
				factor = 2
				trait = just
			}
			modifier = {
				factor = 2
				trait = charitable
			}
			modifier = {
				factor = 2
				trait = kind
			}
			modifier = { # Likes liege
				factor = 4
				opinion = { who = FROMFROM value = 0 }
			}
			modifier = { # Barons and Counts seldom refuse
				factor = 4
				lower_tier_than = DUKE
			}
		}
	}
	option = { # Refuse
		name = emf_prisoner.30.b
		
		FROMFROM = { # Notify liege
			character_event = { id = emf_prisoner.31 tooltip = emf_prisoner.31_tt }
			opinion = {
				who = ROOT
				modifier = opinion_refused_prisoner_transfer
				months = 60
			}
		}
		ai_chance = {
			factor = 1
			modifier = {
				factor = 2
				trait = greedy
			}
			modifier = {
				factor = 2
				trait = envious
			}
			modifier = {
				factor = 2
				trait = arbitrary
			}
			modifier = { # Dislikes liege
				factor = 4
				not = {
					opinion = { who = FROMFROM value = 0 }
				}
			}
		}
	}
}

# Notify liege of refusal
character_event = {
	id = emf_prisoner.31
	desc = emf_prisoner.31.desc
	picture = GFX_evt_into_the_dungeon
	is_triggered_only = yes
	
	option = {
		name = emf_prisoner.31.a
		
		tooltip = {
			opinion = {
				who = FROM
				modifier = opinion_refused_prisoner_transfer
				months = 60
			}
		}
	}
}