namespace = emf_autolander
	
# TODO:
# - Search for a suitable courtier first and allow them to be selected as a 3rd option.
# - Support gender_equality and succ_enatic_cognatic and succ_enatic: pick females too
#   when appropriate.
# - Ask about provinces in ascending order of the number of newly-acquired titles in the
#   province (including the capital). This allows the likely least choice titles to be
#   distributed first, conserving demesne capacity for the later, more choice provinces.
# - Use the CKII 2.2 hardcoded recently-acquired triggers instead of our system that
#   can only flag counties, due to the use a province modifier. This will be cleaner
#   and allow us to also ask about individual baronies under an already-distributed capital.
# - Support automatic distribution of recently-built titles baron-tier titles that cannot
#   be legally held by the liege (e.g., if you build a couple new cities in your demesne
#   and aren't a patrician, then autolander should be able to automate grants of those
#   titles with characters specifically suited for the holding_type (e.g., priests holding
#   new temples for non-muslims).
# - Ensure that the created character has the proper Indian Caste trait for the holding_type
#   being distributed, or they will not be able to hold the title [RoI].
# - Potentially support the option of converting a feudal county into a republican county
#   or vice versa if both a castle and a city are newly-acquired within the county. Could
#   do the same for promoting prince-bishropics or feudalizing them. It would simply be a
#   matter of being sure to grant the new noble the proper type of holding first, then making
#   that holding the province_capital.
# - Ensure that the liege receives the proper piety bonus for granting a temple in the
#   appropriate religions.


# emf_autolander.1
# Title transfer listener for applying Recently Acquired
#
# Taps: on_new_holder (grants + territory gained through gain_all_occupied_titles)
#       on_new_holder_usurpation (general usurpation)
#       on_new_holder_inheritance (inheritance)
#
character_event = {
	id = emf_autolander.1
	desc = HIDE_EVENT
	hide_window = yes
	is_triggered_only = yes
	
	ai = no
	
	trigger = {
		FROM = {
			tier = count
		}
	}
	
	immediate = {
		FROM = {
			location = {
				remove_province_modifier = emf_mod_recently_acquired
				add_province_modifier = { name = emf_mod_recently_acquired duration = 14 }
			}
		}
	}
	
	option = { name = OK }
}

# Give away our recently acquired provinces
character_event = {
	id = emf_autolander.2
	desc = HIDE_EVENT
	hide_window = yes
	is_triggered_only = yes
	
	trigger = {
		any_demesne_title = {
			tier = count
			location = {
				has_province_modifier = emf_mod_recently_acquired
			}
			not = {
				ROOT = {
					capital_scope = {
						duchy = {
							de_jure_vassal_or_below = PREVPREVPREV
						}
					}
				}
			}
			can_be_given_away = yes
		}
	}
	
	option = {
		name = OK
		
		random_demesne_title = {
			limit = {
				tier = count
				location = {
					has_province_modifier = emf_mod_recently_acquired
				}				
				not = {
					ROOT = {
						capital_scope = {
							duchy = {
								de_jure_vassal_or_below = PREVPREVPREV
							}
						}
					}
				}
				can_be_given_away = yes
			}
			location = {
				province_event = { id = emf_autolander.3 } # Prompt to give it away
			}
		}
	}
}


# Bounce event (want to get the province into FROM)
province_event = {
	id = emf_autolander.3
	desc = HIDE_EVENT
	hide_window = yes
	is_triggered_only = yes
	
	trigger = {
		has_province_modifier = emf_mod_recently_acquired
	}
	
	immediate = {	
		remove_province_modifier = emf_mod_recently_acquired
		FROM = { character_event = { id = emf_autolander.4 } }
	}
	
	option = {
		name = OK
	}
}


character_event = {
	id = emf_autolander.4
	desc = emf_autolander.4.desc
	picture = GFX_evt_small_town
	is_triggered_only = yes
	
	hide_from = yes
	hide_new = yes
	
	option = {
		name = emf_autolander.4.opt.a
		
		create_character = {
			random_traits = yes
			religion = ROOT
			culture = ROOT
			dynasty = random
			female = no
			fertility = 0.5
			health = 5
		}
		new_character = {
			hidden_tooltip = {
				FROM = { # Province in question
					county = {
						grant_title = PREVPREV # County to new_character
						ROOT = {
							any_demesne_title = { 
								limit = {
									tier = baron
									de_jure_liege = PREVPREV # The county
								}
								grant_title = PREVPREVPREVPREV # Barony in county to new_character
							}
						}
					}
				}
			}
		}
		
		hidden_tooltip = { character_event = { id = emf_autolander.2 } }
	}
	
	option = {
		name = emf_autolander.4.opt.b
		
		hidden_tooltip = { character_event = { id = emf_autolander.2 } }
	}
}
