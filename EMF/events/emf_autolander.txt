namespace = emf_autolander


# emf_autolander.1
# on_new_holder_usurpation listener for applying Recently Acquired
#
character_event = {
	id = emf_autolander.1
	desc = HIDE_EVENT
	hide_window = yes
	is_triggered_only = yes
	ai = no
	
	trigger = {
		FROM = { 
			tier = count
		}
	}
	
	immediate = {
		FROM = { 
			location = {
				add_province_modifier = { name = emf_recently_acquired_timer duration = 14 }
				remove_province_modifier = { name = emf_personal_demesne }
			}
		}
	}
	
	option = { name = OK }
}

# First, give away our recently acquired provinces
character_event = {
	id = emf_autolander.2
	desc = time_to_bodywash
	is_triggered_only = yes
	ai = no
	
	trigger = {
		NOT = { demesne_efficiency = 1 }
	}
	
	immediate = {
		if = {
			limit = {
				NOT = {
					any_demesne_title = {
						tier = count
						location = {
							has_province_modifier = emf_recently_acquired_timer
							NOT = { has_province_modifier = emf_personal_demesne }
							NOT = { capital_scope = { duchy = { de_jure_vassal_or_below = PREVPREVPREV } } }
						}
						can_be_given_away = yes
					}
				}
			}
			character_event = { id = emf_autolander.3 }
		}
		if = {
			limit = {
				any_demesne_title = {
					tier = count
					location = {
						has_province_modifier = emf_recently_acquired_timer
						NOT = { has_province_modifier = emf_personal_demesne }
						NOT = { capital_scope = { duchy = { de_jure_vassal_or_below = PREVPREVPREV } } }
					}
					can_be_given_away = yes
				}
			}
			create_character = {
				dynasty = random
				female = no
				religion = ROOT
				culture = ROOT
				random_traits = yes
			}
			new_character = {
				set_defacto_liege = ROOT
				liege = { 
					random_demesne_title = {
						limit = { 
							tier = count
							location = {
								has_province_modifier = emf_recently_acquired_timer
								NOT = { has_province_modifier = emf_personal_demesne }
								NOT = { capital_scope = { duchy = { de_jure_vassal_or_below = PREVPREVPREV } } }
							}
							can_be_given_away = yes
						}
						location = {
							remove_province_modifier = emf_recently_acquired_timer
						}
						grant_title = PREVPREV
						root = { 
							any_demesne_title = { 
								limit = { tier = baron de_jure_liege = PREVPREV }
								grant_title = PREVPREVPREVPREV
							}
						}
					}
				}
			}
			character_event = { id = emf_autolander.2 }
		}
	}
	
	option = { name = OK }
}

# Second, give away provinces in duchies non-adjacent to your capital duchy:
character_event = {
	id = emf_autolander.2
	desc = time_to_bodywash
	is_triggered_only = yes
	ai = no
	
	trigger = {
		NOT = { demesne_efficiency = 1 }
	}
	
	immediate = {
		if = {
			limit = {
				NOT = {
					any_demesne_title = {
						tier = count
						# Does not neighbor capital duchy
						NOT = { 
							duchy = {
								any_direct_de_jure_vassal_title = { 
									location = {
										any_neighbor_province = { 
											county = { 
												ROOT = { 
													capital_scope = { 
														duchy = { 
															de_jure_vassal_or_below = PREVPREVPREV 
														}
													}
												}
											}
										}
									}
								}
							}
						}
						location = {
							NOT = { has_province_modifier = emf_personal_demesne }
							NOT = { capital_scope = { duchy = { de_jure_vassal_or_below = PREVPREVPREV } } }
						}
						can_be_given_away = yes
					}
				}
			}
			character_event = { id = emf_autolander.3 }
		}
		if = {
			limit = {
				any_demesne_title = {
					tier = count
					# Does not neighbor capital duchy
					NOT = { 
						duchy = {
							any_direct_de_jure_vassal_title = { 
								location = {
									any_neighbor_province = { 
										county = { 
											ROOT = { 
												capital_scope = { 
													duchy = { 
														de_jure_vassal_or_below = PREVPREVPREV 
													}
												}
											}
										}
									}
								}
							}
						}
					}
					location = {
						NOT = { has_province_modifier = emf_personal_demesne }
						NOT = { capital_scope = { duchy = { de_jure_vassal_or_below = PREVPREVPREV } } }
					}
					can_be_given_away = yes
				}
			}
			create_character = {
				dynasty = random
				female = no
				religion = ROOT
				culture = ROOT
				random_traits = yes
			}
			new_character = {
				set_defacto_liege = ROOT
				liege = { 
					random_demesne_title = {
						limit = { 
							tier = count
							NOT = { 
								duchy = {
									any_direct_de_jure_vassal_title = { 
										location = {
											any_neighbor_province = { 
												county = { 
													ROOT = { 
														capital_scope = { 
															duchy = { 
																de_jure_vassal_or_below = PREVPREVPREV 
															}
														}
													}
												}
											}
										}
									}
								}
							}
							location = {
								NOT = { has_province_modifier = emf_personal_demesne }
								NOT = { capital_scope = { duchy = { de_jure_vassal_or_below = PREVPREVPREV } } }
							}
							can_be_given_away = yes
						}
						location = {
							remove_province_modifier = emf_recently_acquired_timer
						}
						grant_title = PREVPREV
						root = { 
							any_demesne_title = { 
								limit = { tier = baron de_jure_liege = PREVPREV }
								grant_title = PREVPREVPREVPREV
							}
						}
					}
				}
			}
			character_event = { id = emf_autolander.2 }
		}
	}
	
	option = { name = OK }
}