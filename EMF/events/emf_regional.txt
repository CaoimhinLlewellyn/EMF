namespace = emf_regional

### EMF Regional Events Module
### Provides a framework for doing random events with a regional focus

### Regional Events Framework
### 0-99 reserved
# Sends recursive events to rulers
character_event = {
	id = emf_regional.0
	hide_window = yes
	is_triggered_only = yes
	
	option = {
		trigger = {
			not = { has_global_flag = emf_region_invert }
		}
		name = OK
		
		any_playable_ruler = {
			character_event = { id = emf_regional.1 }
		}
	}
	
	option = {
		trigger = { has_global_flag = emf_region_invert }
		name = OK
		
		any_playable_ruler = {
			character_event = { id = emf_regional.2 }
		}
	}
}

# Recurses through ruler provinces, adding flags
character_event = {
	id = emf_regional.1
	hide_window = yes
	is_triggered_only = yes
	
	trigger = {
		any_demesne_province = { not = { has_province_flag = emf_region_sweep } }
	}

	option = { # No event
		name = OK
		ai_chance = { factor = 95 }
		
		random_demesne_title = {
			limit = {
				tier = count
				location = { not = { has_province_flag = emf_region_sweep } }
			}
			location = { set_province_flag = emf_region_sweep }
		}
		
		# Recurse
		character_event = { id = emf_regional.1 }
	}

	option = { # Weather event!
		name = OK
		ai_chance = { factor = 4 }
		
		random_demesne_title = {
			limit = {
				tier = count
				location = { not = { has_province_flag = emf_region_sweep } }
			}
			location = {
				set_province_flag = emf_region_sweep
				# EMF Seasonal Events
				set_province_flag = emf_seasonal_event
				owner = { character_event = { id = emf_regional.3 } }
			}
		}
		
		# Recurse
		character_event = { id = emf_regional.1 }
	}
	
	option = { # Other seasonal event
		name = OK
		ai_chance = { factor = 1 }
		
		random_demesne_title = {
			limit = {
				tier = count
				location = { not = { has_province_flag = emf_region_sweep } }
			}
			location = {
				set_province_flag = emf_region_sweep
				# EMF Seasonal Events
				# set_province_flag = emf_seasonal_event
				# owner = { character_event = { id = emf_regional.4 } }
			}
		}
		
		# Recurse
		character_event = { id = emf_regional.1 }
	}
}

# Recurses through ruler provinces, removing flags
character_event = {
	id = emf_regional.2
	hide_window = yes
	is_triggered_only = yes
	
	trigger = {
		any_demesne_province = { has_province_flag = emf_region_sweep }
	}
	
	option = { # No event
		name = OK
		ai_chance = { factor = 95 }
		
		random_demesne_title = {
			limit = {
				tier = count
				location = { has_province_flag = emf_region_sweep }
			}
			location = { clr_province_flag = emf_region_sweep }
		}
		
		# Recurse
		character_event = { id = emf_regional.2 }
	}

	option = { # Weather event!
		name = OK
		ai_chance = { factor = 4 }
		
		random_demesne_title = {
			limit = {
				tier = count
				location = { has_province_flag = emf_region_sweep }
			}
			location = {
				clr_province_flag = emf_region_sweep
				# EMF Seasonal Events
				set_province_flag = emf_seasonal_event
				owner = { character_event = { id = emf_regional.3 } }
			}
		}
		
		# Recurse
		character_event = { id = emf_regional.2 }
	}
	
	option = { # Other seasonal event
		name = OK
		ai_chance = { factor = 1 }
		
		random_demesne_title = {
			limit = {
				tier = count
				location = { has_province_flag = emf_region_sweep }
			}
			location = {
				clr_province_flag = emf_region_sweep
				# EMF Seasonal Events
				# set_province_flag = emf_seasonal_event
				# owner = { character_event = { id = emf_regional.4 } }
			}
		}
		
		# Recurse
		character_event = { id = emf_regional.2 }
	}
}

### Seasonal Events
# And don't forget, we'll probably want some weather/other modifier graphics!

# Seasons:
# Spring = March, April, May
# Summer = June, July, August
# Autumn = September, October, November
# Winter = December, January, February

# Terrain:
# Vanilla: steppe, jungle, forest, hills, plains, farmlands, mountain, desert, arctic
# SWMH: marsh, coastal_desert, woods

# Effects:
# Possible effects: Effective fort readiness on coastal provinces, trade value, tax modifiers, possibly movement speed (though the new local_speed_modifier), levy_sizes, attrition (supply_limit and max_attrition), and in particularly nasty cases increased revolt risk

# Rain: Bad for ripening or harvest, but good for growing (Heavy Rain is enough)
# Heavy Rain: Very bad for ripening or ready crops (Heavy Snow in Winter)
# Storms: Damage crops, bad for livestock (Blizzards in Winter)
# Cloudy: Poor effect on ripening crops (doesn't apply in Winter)
# Bright: Good for ripening crops (doesn't apply in Winter)
# Drought: Bad for everything
# Heat Wave: ? (Mild Winter in Winter)
# Unusually Cold: ? (Harsh Winter in Winter)

# Desert is going to need to get its own version of many of these modifiers for proper localization descriptions
# Jungle might need some as well

# Hand out seasonal weather events
character_event = {
	id = emf_regional.3
	hide_window = yes
	is_triggered_only = yes
	
	# Shared
	option = { # Heavy Rain
		name = OK
		ai_chance = {
			factor = 1
			modifier = { # Not in Winter
				factor = 0
				or = {
					month = 11 # At least December
					and = {
						month = 0
						not = { month = 2 } # Before March
					}
				}
			}
		}
		random_demesne_title = {
			limit = {
				tier = count
				location = { has_province_flag = emf_seasonal_event }
			}
			location = {
				clr_province_flag = emf_seasonal_event
				# Heavy Rain is good during spring
				if = {
					limit = {
						not = { terrain = desert }
						not = { borders_major_river = yes }
						not = { port = yes }
						month = 2 # At least March
						not = { month = 5 } # Before June
					}
					add_province_modifier = {
						name = emf_mod_heavy_rain_good
						duration = 80
					}
				}
				# Heavy Rain is bad during other seasons
				if = {
					limit = {
						not = { terrain = desert }
						not = { borders_major_river = yes }
						not = { port = yes }
						month = 5 # At least June
						not = { month = 11 } # Before December
					}
					add_province_modifier = {
						name = emf_mod_heavy_rain_bad
						duration = 80
					}
				}
				# River Flooding
				if = {
					limit = { borders_major_river = yes }
					add_province_modifier = {
						name = emf_mod_river_flooding
						duration = 80
					}
				}
				# Coastal Flooding
				if = {
					limit = { port = yes }
					add_province_modifier = {
						name = emf_mod_coastal_flooding
						duration = 80
					}
				}
				# Deserts get their own Rain
				if = {
					limit = { terrain = desert }
					add_province_modifier = {
						name = emf_mod_desert_rain
						duration = 80
					}
				}
				any_neighbor_province = {
					limit = {
						# General
						not = { has_province_modifier = emf_mod_heavy_rain_good }
						not = { has_province_modifier = emf_mod_heavy_rain_bad }
						not = { has_province_modifier = emf_mod_storms }
						not = { has_province_modifier = emf_mod_drought }
						# Special
						not = { has_province_modifier = emf_mod_river_flooding }
						not = { has_province_modifier = emf_mod_coastal_flooding }
						not = { has_province_modifier = emf_mod_sandstorms }
						not = { has_province_modifier = emf_mod_desert_rain }
						not = { has_province_modifier = emf_mod_desert_storms }
						# Winter
						not = { has_province_modifier = emf_mod_heavy_snow }
						not = { has_province_modifier = emf_mod_blizzards }
						not = { has_province_modifier = emf_mod_mild_winter }
						not = { has_province_modifier = emf_mod_harsh_winter }
						# Spring
						not = { has_province_modifier = emf_mod_pleasant_spring }
						not = { has_province_modifier = emf_mod_long_winter }
						# Summer
						not = { has_province_modifier = emf_mod_heat_wave }
						not = { has_province_modifier = emf_mod_mild_summer }
						not = { has_province_modifier = emf_mod_cloudy }
						not = { has_province_modifier = emf_mod_bright }
						# Autumn
						not = { has_province_modifier = emf_mod_warm_autumn }
						not = { has_province_modifier = emf_mod_early_winter }
					}
					# Set or remove flags
					if = {
						limit = { not = { has_global_flag = emf_region_invert } }
						set_province_flag = emf_region_sweep
					}
					if = {
						limit = { has_global_flag = emf_region_invert }
						clr_province_flag = emf_region_sweep
					}
					# Most provinces get Heavy Rain
					if = {
						limit = {
							not = { terrain = desert }
							not = { borders_major_river = yes }
							not = { port = yes }
						}
						add_province_modifier = {
							name = emf_mod_heavy_rain
							duration = 80
						}
					}
					# River Flooding
					if = {
						limit = { borders_major_river = yes }
						add_province_modifier = {
							name = emf_mod_river_flooding
							duration = 80
						}
					}
					# Coastal Flooding
					if = {
						limit = { port = yes }
						add_province_modifier = {
							name = emf_mod_coastal_flooding
							duration = 80
						}
					}
					# Deserts get their own Rain
					if = {
						limit = { terrain = desert }
						add_province_modifier = {
							name = emf_mod_desert_rain
							duration = 80
						}
					}
				}
			}
		}
	}
	option = { # Storms
		name = OK
		ai_chance = {
			factor = 1
			modifier = { # Not in Winter
				factor = 0
				or = {
					month = 11 # At least December
					and = {
						month = 0
						not = { month = 2 } # Before March
					}
				}
			}
		}
		random_demesne_title = {
			limit = {
				tier = count
				location = { has_province_flag = emf_seasonal_event }
			}
			location = {
				clr_province_flag = emf_seasonal_event
				# Most provinces get Storms
				if = {
					limit = {
						not = { terrain = desert }
						not = { borders_major_river = yes }
						not = { port = yes }
					}
					add_province_modifier = {
						name = emf_mod_storms
						duration = 80
					}
				}
				# River Flooding
				if = {
					limit = { borders_major_river = yes }
					add_province_modifier = {
						name = emf_mod_river_flooding
						duration = 80
					}
				}
				# Coastal Flooding
				if = {
					limit = { port = yes }
					add_province_modifier = {
						name = emf_mod_coastal_flooding
						duration = 80
					}
				}
				# Deserts get Sandstorms unless they're coastal or border a major river
				if = {
					limit = {
						terrain = desert
						not = { borders_major_river = yes }
						not = { port = yes }
					}
					add_province_modifier = {
						name = emf_mod_sandstorms
						duration = 80
					}
				}
				any_neighbor_province = {
					limit = {
						# General
						not = { has_province_modifier = emf_mod_heavy_rain_good }
						not = { has_province_modifier = emf_mod_heavy_rain_bad }
						not = { has_province_modifier = emf_mod_storms }
						not = { has_province_modifier = emf_mod_drought }
						# Special
						not = { has_province_modifier = emf_mod_river_flooding }
						not = { has_province_modifier = emf_mod_coastal_flooding }
						not = { has_province_modifier = emf_mod_sandstorms }
						not = { has_province_modifier = emf_mod_desert_rain }
						not = { has_province_modifier = emf_mod_desert_storms }
						# Winter
						not = { has_province_modifier = emf_mod_heavy_snow }
						not = { has_province_modifier = emf_mod_blizzards }
						not = { has_province_modifier = emf_mod_mild_winter }
						not = { has_province_modifier = emf_mod_harsh_winter }
						# Spring
						not = { has_province_modifier = emf_mod_pleasant_spring }
						not = { has_province_modifier = emf_mod_long_winter }
						# Summer
						not = { has_province_modifier = emf_mod_heat_wave }
						not = { has_province_modifier = emf_mod_mild_summer }
						not = { has_province_modifier = emf_mod_cloudy }
						not = { has_province_modifier = emf_mod_bright }
						# Autumn
						not = { has_province_modifier = emf_mod_warm_autumn }
						not = { has_province_modifier = emf_mod_early_winter }
					}
					# Set or remove flags
					if = {
						limit = { not = { has_global_flag = emf_region_invert } }
						set_province_flag = emf_region_sweep
					}
					if = {
						limit = { has_global_flag = emf_region_invert }
						clr_province_flag = emf_region_sweep
					}
					# Most provinces get Storms
					if = {
						limit = {
							not = { terrain = desert }
							not = { borders_major_river = yes }
							not = { port = yes }
						}
						add_province_modifier = {
							name = emf_mod_storms
							duration = 80
						}
					}
					# River Flooding
					if = {
						limit = { borders_major_river = yes }
						add_province_modifier = {
							name = emf_mod_river_flooding
							duration = 80
						}
					}
					# Coastal Flooding
					if = {
						limit = { port = yes }
						add_province_modifier = {
							name = emf_mod_coastal_flooding
							duration = 80
						}
					}
					# Deserts get Sandstorms
					if = {
						limit = { terrain = desert }
						add_province_modifier = {
							name = emf_mod_sandstorms
							duration = 80
						}
					}
				}
			}
		}
	}
	option = { # Drought
		name = OK
		ai_chance = {
			factor = 1
		}
		random_demesne_title = {
			limit = {
				tier = count
				location = { has_province_flag = emf_seasonal_event }
			}
			location = {
				clr_province_flag = emf_seasonal_event
				# Most provinces get Drought
				if = {
					limit = {
						not = { terrain = desert }
					}
					add_province_modifier = {
						name = emf_mod_drought
						duration = 80
					}
				}
				any_neighbor_province = {
					limit = {
						# General
						not = { has_province_modifier = emf_mod_heavy_rain_good }
						not = { has_province_modifier = emf_mod_heavy_rain_bad }
						not = { has_province_modifier = emf_mod_storms }
						not = { has_province_modifier = emf_mod_drought }
						# Special
						not = { has_province_modifier = emf_mod_river_flooding }
						not = { has_province_modifier = emf_mod_coastal_flooding }
						not = { has_province_modifier = emf_mod_sandstorms }
						not = { has_province_modifier = emf_mod_desert_rain }
						not = { has_province_modifier = emf_mod_desert_storms }
						# Winter
						not = { has_province_modifier = emf_mod_heavy_snow }
						not = { has_province_modifier = emf_mod_blizzards }
						not = { has_province_modifier = emf_mod_mild_winter }
						not = { has_province_modifier = emf_mod_harsh_winter }
						# Spring
						not = { has_province_modifier = emf_mod_pleasant_spring }
						not = { has_province_modifier = emf_mod_long_winter }
						# Summer
						not = { has_province_modifier = emf_mod_heat_wave }
						not = { has_province_modifier = emf_mod_mild_summer }
						not = { has_province_modifier = emf_mod_cloudy }
						not = { has_province_modifier = emf_mod_bright }
						# Autumn
						not = { has_province_modifier = emf_mod_warm_autumn }
						not = { has_province_modifier = emf_mod_early_winter }
					}
					# Set or remove flags
					if = {
						limit = { not = { has_global_flag = emf_region_invert } }
						set_province_flag = emf_region_sweep
					}
					if = {
						limit = { has_global_flag = emf_region_invert }
						clr_province_flag = emf_region_sweep
					}
					# Most provinces get Drought
					if = {
						limit = {
							not = { terrain = desert }
						}
						add_province_modifier = {
							name = emf_mod_drought
							duration = 80
						}
					}
				}
			}
		}
	}
	
	# Winter
	option = { # Heavy Snow
		trigger = {
			or = {
				month = 11 # At least December
				and = {
					month = 0
					not = { month = 2 } # Before March
				}
			}
		}
		name = OK
		ai_chance = {
			factor = 1
		}
		
		random_demesne_title = {
			limit = {
				tier = count
				location = { has_province_flag = emf_seasonal_event }
			}
			location = {
				clr_province_flag = emf_seasonal_event
				# Most provinces get Heavy Snow
				if = {
					limit = {
						or = {
							not = { terrain = jungle }
							not = { terrain = desert }
						}
					}
					add_province_modifier = {
						name = emf_mod_heavy_snow
						duration = 80
					}
				}
				# Desert and Jungle get Heavy Rains
				if = {
					limit = {
						or = {
							terrain = jungle
							terrain = desert
						}
					}
					add_province_modifier = {
						name = emf_mod_heavy_rain
						duration = 80
					}
				}
				any_neighbor_province = {
					limit = {
						# General
						not = { has_province_modifier = emf_mod_heavy_rain_good }
						not = { has_province_modifier = emf_mod_heavy_rain_bad }
						not = { has_province_modifier = emf_mod_storms }
						not = { has_province_modifier = emf_mod_drought }
						# Special
						not = { has_province_modifier = emf_mod_river_flooding }
						not = { has_province_modifier = emf_mod_coastal_flooding }
						not = { has_province_modifier = emf_mod_sandstorms }
						not = { has_province_modifier = emf_mod_desert_rain }
						not = { has_province_modifier = emf_mod_desert_storms }
						# Winter
						not = { has_province_modifier = emf_mod_heavy_snow }
						not = { has_province_modifier = emf_mod_blizzards }
						not = { has_province_modifier = emf_mod_mild_winter }
						not = { has_province_modifier = emf_mod_harsh_winter }
						# Spring
						not = { has_province_modifier = emf_mod_pleasant_spring }
						not = { has_province_modifier = emf_mod_long_winter }
						# Summer
						not = { has_province_modifier = emf_mod_heat_wave }
						not = { has_province_modifier = emf_mod_mild_summer }
						not = { has_province_modifier = emf_mod_cloudy }
						not = { has_province_modifier = emf_mod_bright }
						# Autumn
						not = { has_province_modifier = emf_mod_warm_autumn }
						not = { has_province_modifier = emf_mod_early_winter }
					}
					# Set or remove flags
					if = {
						limit = { not = { has_global_flag = emf_region_invert } }
						set_province_flag = emf_region_sweep
					}
					if = {
						limit = { has_global_flag = emf_region_invert }
						clr_province_flag = emf_region_sweep
					}
					# Most provinces get Heavy Snow
					if = {
						limit = {
							not = { terrain = jungle }
							not = { terrain = desert }
						}
						add_province_modifier = {
							name = emf_mod_heavy_snow
							duration = 80
						}
					}
					# Desert and Jungle get Heavy Rains
					if = {
						limit = {
							or = {
								terrain = jungle
								terrain = desert
							}
						}
						add_province_modifier = {
							name = emf_mod_heavy_rain
							duration = 80
						}
					}
				}
			}
		}
	}
	option = { # Blizzards
		trigger = {
			or = {
				month = 11 # At least December
				and = {
					month = 0
					not = { month = 2 } # Before March
				}
			}
		}
		name = OK
		ai_chance = {
			factor = 1
		}
		
		random_demesne_title = {
			limit = {
				tier = count
				location = { has_province_flag = emf_seasonal_event }
			}
			location = {
				clr_province_flag = emf_seasonal_event
				# Most provinces get Blizzards
				if = {
					limit = {
						not = { terrain = jungle }
						not = { terrain = desert }
					}
					add_province_modifier = {
						name = emf_mod_blizzards
						duration = 80
					}
				}
				# Jungle get Storms
				if = {
					limit = { terrain = jungle }
					add_province_modifier = {
						name = emf_mod_storms
						duration = 80
					}
				}
				# Desert gets Desert Storms
				if = {
					limit = { terrain = desert }
					add_province_modifier = {
						name = emf_mod_desert_storms
						duration = 80
					}
				}
				any_neighbor_province = {
					limit = {
						# General
						not = { has_province_modifier = emf_mod_heavy_rain_good }
						not = { has_province_modifier = emf_mod_heavy_rain_bad }
						not = { has_province_modifier = emf_mod_storms }
						not = { has_province_modifier = emf_mod_drought }
						# Special
						not = { has_province_modifier = emf_mod_river_flooding }
						not = { has_province_modifier = emf_mod_coastal_flooding }
						not = { has_province_modifier = emf_mod_sandstorms }
						not = { has_province_modifier = emf_mod_desert_rain }
						not = { has_province_modifier = emf_mod_desert_storms }
						# Winter
						not = { has_province_modifier = emf_mod_heavy_snow }
						not = { has_province_modifier = emf_mod_blizzards }
						not = { has_province_modifier = emf_mod_mild_winter }
						not = { has_province_modifier = emf_mod_harsh_winter }
						# Spring
						not = { has_province_modifier = emf_mod_pleasant_spring }
						not = { has_province_modifier = emf_mod_long_winter }
						# Summer
						not = { has_province_modifier = emf_mod_heat_wave }
						not = { has_province_modifier = emf_mod_mild_summer }
						not = { has_province_modifier = emf_mod_cloudy }
						not = { has_province_modifier = emf_mod_bright }
						# Autumn
						not = { has_province_modifier = emf_mod_warm_autumn }
						not = { has_province_modifier = emf_mod_early_winter }
					}
					# Set or remove flags
					if = {
						limit = { not = { has_global_flag = emf_region_invert } }
						set_province_flag = emf_region_sweep
					}
					if = {
						limit = { has_global_flag = emf_region_invert }
						clr_province_flag = emf_region_sweep
					}
					# Most provinces get Blizzards
					if = {
						limit = {
							or = {
								not = { terrain = jungle }
								not = { terrain = desert }
							}
						}
						add_province_modifier = {
							name = emf_mod_blizzards
							duration = 80
						}
					}
					# Jungle get Storms
					if = {
						limit = { terrain = jungle }
						add_province_modifier = {
							name = emf_mod_storms
							duration = 80
						}
					}
					# Desert gets Desert Storms
					if = {
						limit = { terrain = desert }
						add_province_modifier = {
							name = emf_mod_desert_storms
							duration = 80
						}
					}
				}
			}
		}
	}
	option = { # Mild Winter (warm)
		trigger = {
			or = {
				month = 11 # At least December
				and = {
					month = 0
					not = { month = 2 } # Before March
				}
			}
		}
		name = OK
		ai_chance = {
			factor = 1
		}
		
		random_demesne_title = {
			limit = {
				tier = count
				location = { has_province_flag = emf_seasonal_event }
			}
			location = {
				clr_province_flag = emf_seasonal_event
				# All provinces get Mild Winter
				add_province_modifier = {
					name = emf_mod_mild_winter
					duration = 80
				}
				any_neighbor_province = {
					limit = {
						# General
						not = { has_province_modifier = emf_mod_heavy_rain_good }
						not = { has_province_modifier = emf_mod_heavy_rain_bad }
						not = { has_province_modifier = emf_mod_storms }
						not = { has_province_modifier = emf_mod_drought }
						# Special
						not = { has_province_modifier = emf_mod_river_flooding }
						not = { has_province_modifier = emf_mod_coastal_flooding }
						not = { has_province_modifier = emf_mod_sandstorms }
						not = { has_province_modifier = emf_mod_desert_rain }
						not = { has_province_modifier = emf_mod_desert_storms }
						# Winter
						not = { has_province_modifier = emf_mod_heavy_snow }
						not = { has_province_modifier = emf_mod_blizzards }
						not = { has_province_modifier = emf_mod_mild_winter }
						not = { has_province_modifier = emf_mod_harsh_winter }
						# Spring
						not = { has_province_modifier = emf_mod_pleasant_spring }
						not = { has_province_modifier = emf_mod_long_winter }
						# Summer
						not = { has_province_modifier = emf_mod_heat_wave }
						not = { has_province_modifier = emf_mod_mild_summer }
						not = { has_province_modifier = emf_mod_cloudy }
						not = { has_province_modifier = emf_mod_bright }
						# Autumn
						not = { has_province_modifier = emf_mod_warm_autumn }
						not = { has_province_modifier = emf_mod_early_winter }
					}
					# Set or remove flags
					if = {
						limit = { not = { has_global_flag = emf_region_invert } }
						set_province_flag = emf_region_sweep
					}
					if = {
						limit = { has_global_flag = emf_region_invert }
						clr_province_flag = emf_region_sweep
					}
					# All provinces get Mild Winter
					add_province_modifier = {
						name = emf_mod_mild_winter
						duration = 80
					}
				}
			}
		}
	}
	option = { # Harsh Winter (cold)
		trigger = {
			or = {
				month = 11 # At least December
				and = {
					month = 0
					not = { month = 2 } # Before March
				}
			}
		}
		name = OK
		ai_chance = {
			factor = 1
		}
		
		random_demesne_title = {
			limit = {
				tier = count
				location = { has_province_flag = emf_seasonal_event }
			}
			location = {
				clr_province_flag = emf_seasonal_event
				# All provinces get Harsh Winter
				add_province_modifier = {
					name = emf_mod_harsh_winter
					duration = 80
				}
				any_neighbor_province = {
					limit = {
						# General
						not = { has_province_modifier = emf_mod_heavy_rain_good }
						not = { has_province_modifier = emf_mod_heavy_rain_bad }
						not = { has_province_modifier = emf_mod_storms }
						not = { has_province_modifier = emf_mod_drought }
						# Special
						not = { has_province_modifier = emf_mod_river_flooding }
						not = { has_province_modifier = emf_mod_coastal_flooding }
						not = { has_province_modifier = emf_mod_sandstorms }
						not = { has_province_modifier = emf_mod_desert_rain }
						not = { has_province_modifier = emf_mod_desert_storms }
						# Winter
						not = { has_province_modifier = emf_mod_heavy_snow }
						not = { has_province_modifier = emf_mod_blizzards }
						not = { has_province_modifier = emf_mod_mild_winter }
						not = { has_province_modifier = emf_mod_harsh_winter }
						# Spring
						not = { has_province_modifier = emf_mod_pleasant_spring }
						not = { has_province_modifier = emf_mod_long_winter }
						# Summer
						not = { has_province_modifier = emf_mod_heat_wave }
						not = { has_province_modifier = emf_mod_mild_summer }
						not = { has_province_modifier = emf_mod_cloudy }
						not = { has_province_modifier = emf_mod_bright }
						# Autumn
						not = { has_province_modifier = emf_mod_warm_autumn }
						not = { has_province_modifier = emf_mod_early_winter }
					}
					# Set or remove flags
					if = {
						limit = { not = { has_global_flag = emf_region_invert } }
						set_province_flag = emf_region_sweep
					}
					if = {
						limit = { has_global_flag = emf_region_invert }
						clr_province_flag = emf_region_sweep
					}
					# All provinces get Harsh Winter
					add_province_modifier = {
						name = emf_mod_harsh_winter
						duration = 80
					}
				}
			}
		}
	}
	
	# Spring
	option = { # Pleasant Spring (warm)
		trigger = {
			month = 2 # At least March
			not = { month = 5 } # Before June
		}
		name = OK
		ai_chance = {
			factor = 1
		}
		
		random_demesne_title = {
			limit = {
				tier = count
				location = { has_province_flag = emf_seasonal_event }
			}
			location = {
				clr_province_flag = emf_seasonal_event
				# All provinces get Pleasant Spring
				add_province_modifier = {
					name = emf_mod_pleasant_spring
					duration = 80
				}
				any_neighbor_province = {
					limit = {
						# General
						not = { has_province_modifier = emf_mod_heavy_rain_good }
						not = { has_province_modifier = emf_mod_heavy_rain_bad }
						not = { has_province_modifier = emf_mod_storms }
						not = { has_province_modifier = emf_mod_drought }
						# Special
						not = { has_province_modifier = emf_mod_river_flooding }
						not = { has_province_modifier = emf_mod_coastal_flooding }
						not = { has_province_modifier = emf_mod_sandstorms }
						not = { has_province_modifier = emf_mod_desert_rain }
						not = { has_province_modifier = emf_mod_desert_storms }
						# Winter
						not = { has_province_modifier = emf_mod_heavy_snow }
						not = { has_province_modifier = emf_mod_blizzards }
						not = { has_province_modifier = emf_mod_mild_winter }
						not = { has_province_modifier = emf_mod_harsh_winter }
						# Spring
						not = { has_province_modifier = emf_mod_pleasant_spring }
						not = { has_province_modifier = emf_mod_long_winter }
						# Summer
						not = { has_province_modifier = emf_mod_heat_wave }
						not = { has_province_modifier = emf_mod_mild_summer }
						not = { has_province_modifier = emf_mod_cloudy }
						not = { has_province_modifier = emf_mod_bright }
						# Autumn
						not = { has_province_modifier = emf_mod_warm_autumn }
						not = { has_province_modifier = emf_mod_early_winter }
					}
					# Set or remove flags
					if = {
						limit = { not = { has_global_flag = emf_region_invert } }
						set_province_flag = emf_region_sweep
					}
					if = {
						limit = { has_global_flag = emf_region_invert }
						clr_province_flag = emf_region_sweep
					}
					# All provinces get Pleasant Spring
					add_province_modifier = {
						name = emf_mod_pleasant_spring
						duration = 80
					}
				}
			}
		}
	}
	option = { # Long Winter (cold)
		trigger = {
			month = 2 # At least March
			not = { month = 5 } # Before June
		}
		name = OK
		ai_chance = {
			factor = 1
		}
		
		random_demesne_title = {
			limit = {
				tier = count
				location = { has_province_flag = emf_seasonal_event }
			}
			location = {
				clr_province_flag = emf_seasonal_event
				# All provinces get Long Winter
				add_province_modifier = {
					name = emf_mod_long_winter
					duration = 80
				}
				any_neighbor_province = {
					limit = {
						# General
						not = { has_province_modifier = emf_mod_heavy_rain_good }
						not = { has_province_modifier = emf_mod_heavy_rain_bad }
						not = { has_province_modifier = emf_mod_storms }
						not = { has_province_modifier = emf_mod_drought }
						# Special
						not = { has_province_modifier = emf_mod_river_flooding }
						not = { has_province_modifier = emf_mod_coastal_flooding }
						not = { has_province_modifier = emf_mod_sandstorms }
						not = { has_province_modifier = emf_mod_desert_rain }
						not = { has_province_modifier = emf_mod_desert_storms }
						# Winter
						not = { has_province_modifier = emf_mod_heavy_snow }
						not = { has_province_modifier = emf_mod_blizzards }
						not = { has_province_modifier = emf_mod_mild_winter }
						not = { has_province_modifier = emf_mod_harsh_winter }
						# Spring
						not = { has_province_modifier = emf_mod_pleasant_spring }
						not = { has_province_modifier = emf_mod_long_winter }
						# Summer
						not = { has_province_modifier = emf_mod_heat_wave }
						not = { has_province_modifier = emf_mod_mild_summer }
						not = { has_province_modifier = emf_mod_cloudy }
						not = { has_province_modifier = emf_mod_bright }
						# Autumn
						not = { has_province_modifier = emf_mod_warm_autumn }
						not = { has_province_modifier = emf_mod_early_winter }
					}
					# Set or remove flags
					if = {
						limit = { not = { has_global_flag = emf_region_invert } }
						set_province_flag = emf_region_sweep
					}
					if = {
						limit = { has_global_flag = emf_region_invert }
						clr_province_flag = emf_region_sweep
					}
					# All provinces get Long Winter
					add_province_modifier = {
						name = emf_mod_long_winter
						duration = 80
					}
				}
			}
		}
	}
	
	# Summer
	option = { # Heat Wave (warm)
		trigger = {
			month = 5 # At least June
			not = { month = 8 } # Before September
		}
		name = OK
		ai_chance = {
			factor = 1
		}
		
		random_demesne_title = {
			limit = {
				tier = count
				location = { has_province_flag = emf_seasonal_event }
			}
			location = {
				clr_province_flag = emf_seasonal_event
				# All provinces get Heat Wave
				add_province_modifier = {
					name = emf_mod_heat_wave
					duration = 80
				}
				any_neighbor_province = {
					limit = {
						# General
						not = { has_province_modifier = emf_mod_heavy_rain_good }
						not = { has_province_modifier = emf_mod_heavy_rain_bad }
						not = { has_province_modifier = emf_mod_storms }
						not = { has_province_modifier = emf_mod_drought }
						# Special
						not = { has_province_modifier = emf_mod_river_flooding }
						not = { has_province_modifier = emf_mod_coastal_flooding }
						not = { has_province_modifier = emf_mod_sandstorms }
						not = { has_province_modifier = emf_mod_desert_rain }
						not = { has_province_modifier = emf_mod_desert_storms }
						# Winter
						not = { has_province_modifier = emf_mod_heavy_snow }
						not = { has_province_modifier = emf_mod_blizzards }
						not = { has_province_modifier = emf_mod_mild_winter }
						not = { has_province_modifier = emf_mod_harsh_winter }
						# Spring
						not = { has_province_modifier = emf_mod_pleasant_spring }
						not = { has_province_modifier = emf_mod_long_winter }
						# Summer
						not = { has_province_modifier = emf_mod_heat_wave }
						not = { has_province_modifier = emf_mod_mild_summer }
						not = { has_province_modifier = emf_mod_cloudy }
						not = { has_province_modifier = emf_mod_bright }
						# Autumn
						not = { has_province_modifier = emf_mod_warm_autumn }
						not = { has_province_modifier = emf_mod_early_winter }
					}
					# Set or remove flags
					if = {
						limit = { not = { has_global_flag = emf_region_invert } }
						set_province_flag = emf_region_sweep
					}
					if = {
						limit = { has_global_flag = emf_region_invert }
						clr_province_flag = emf_region_sweep
					}
					# All provinces get Heat Wave
					add_province_modifier = {
						name = emf_mod_heat_wave
						duration = 80
					}
				}
			}
		}
	}
	option = { # Mild Summer (cold)
		trigger = {
			month = 5 # At least June
			not = { month = 8 } # Before September
		}
		name = OK
		ai_chance = {
			factor = 1
		}
		
		random_demesne_title = {
			limit = {
				tier = count
				location = { has_province_flag = emf_seasonal_event }
			}
			location = {
				clr_province_flag = emf_seasonal_event
				# All provinces get Mild Summer
				add_province_modifier = {
					name = emf_mod_mild_summer
					duration = 80
				}
				any_neighbor_province = {
					limit = {
						# General
						not = { has_province_modifier = emf_mod_heavy_rain_good }
						not = { has_province_modifier = emf_mod_heavy_rain_bad }
						not = { has_province_modifier = emf_mod_storms }
						not = { has_province_modifier = emf_mod_drought }
						# Special
						not = { has_province_modifier = emf_mod_river_flooding }
						not = { has_province_modifier = emf_mod_coastal_flooding }
						not = { has_province_modifier = emf_mod_sandstorms }
						not = { has_province_modifier = emf_mod_desert_rain }
						not = { has_province_modifier = emf_mod_desert_storms }
						# Winter
						not = { has_province_modifier = emf_mod_heavy_snow }
						not = { has_province_modifier = emf_mod_blizzards }
						not = { has_province_modifier = emf_mod_mild_winter }
						not = { has_province_modifier = emf_mod_harsh_winter }
						# Spring
						not = { has_province_modifier = emf_mod_pleasant_spring }
						not = { has_province_modifier = emf_mod_long_winter }
						# Summer
						not = { has_province_modifier = emf_mod_heat_wave }
						not = { has_province_modifier = emf_mod_mild_summer }
						not = { has_province_modifier = emf_mod_cloudy }
						not = { has_province_modifier = emf_mod_bright }
						# Autumn
						not = { has_province_modifier = emf_mod_warm_autumn }
						not = { has_province_modifier = emf_mod_early_winter }
					}
					# Set or remove flags
					if = {
						limit = { not = { has_global_flag = emf_region_invert } }
						set_province_flag = emf_region_sweep
					}
					if = {
						limit = { has_global_flag = emf_region_invert }
						clr_province_flag = emf_region_sweep
					}
					# All provinces get Mild Summer
					add_province_modifier = {
						name = emf_mod_mild_summer
						duration = 80
					}
				}
			}
		}
	}
	option = { # Cloudy
		trigger = {
			month = 5 # At least June
			not = { month = 8 } # Before September
		}
		name = OK
		ai_chance = {
			factor = 1
		}
		
		random_demesne_title = {
			limit = {
				tier = count
				location = { has_province_flag = emf_seasonal_event }
			}
			location = {
				clr_province_flag = emf_seasonal_event
				# All provinces get Cloudy
				add_province_modifier = {
					name = emf_mod_cloudy
					duration = 80
				}
				any_neighbor_province = {
					limit = {
						# General
						not = { has_province_modifier = emf_mod_heavy_rain_good }
						not = { has_province_modifier = emf_mod_heavy_rain_bad }
						not = { has_province_modifier = emf_mod_storms }
						not = { has_province_modifier = emf_mod_drought }
						# Special
						not = { has_province_modifier = emf_mod_river_flooding }
						not = { has_province_modifier = emf_mod_coastal_flooding }
						not = { has_province_modifier = emf_mod_sandstorms }
						not = { has_province_modifier = emf_mod_desert_rain }
						not = { has_province_modifier = emf_mod_desert_storms }
						# Winter
						not = { has_province_modifier = emf_mod_heavy_snow }
						not = { has_province_modifier = emf_mod_blizzards }
						not = { has_province_modifier = emf_mod_mild_winter }
						not = { has_province_modifier = emf_mod_harsh_winter }
						# Spring
						not = { has_province_modifier = emf_mod_pleasant_spring }
						not = { has_province_modifier = emf_mod_long_winter }
						# Summer
						not = { has_province_modifier = emf_mod_heat_wave }
						not = { has_province_modifier = emf_mod_mild_summer }
						not = { has_province_modifier = emf_mod_cloudy }
						not = { has_province_modifier = emf_mod_bright }
						# Autumn
						not = { has_province_modifier = emf_mod_warm_autumn }
						not = { has_province_modifier = emf_mod_early_winter }
					}
					# Set or remove flags
					if = {
						limit = { not = { has_global_flag = emf_region_invert } }
						set_province_flag = emf_region_sweep
					}
					if = {
						limit = { has_global_flag = emf_region_invert }
						clr_province_flag = emf_region_sweep
					}
					# All provinces get Cloudy
					add_province_modifier = {
						name = emf_mod_cloudy
						duration = 80
					}
				}
			}
		}
	}
	option = { # Bright
		trigger = {
			month = 5 # At least June
			not = { month = 8 } # Before September
		}
		name = OK
		ai_chance = {
			factor = 1
		}
		
		random_demesne_title = {
			limit = {
				tier = count
				location = { has_province_flag = emf_seasonal_event }
			}
			location = {
				clr_province_flag = emf_seasonal_event
				# All provinces get Bright
				add_province_modifier = {
					name = emf_mod_bright
					duration = 80
				}
				any_neighbor_province = {
					limit = {
						# General
						not = { has_province_modifier = emf_mod_heavy_rain_good }
						not = { has_province_modifier = emf_mod_heavy_rain_bad }
						not = { has_province_modifier = emf_mod_storms }
						not = { has_province_modifier = emf_mod_drought }
						# Special
						not = { has_province_modifier = emf_mod_river_flooding }
						not = { has_province_modifier = emf_mod_coastal_flooding }
						not = { has_province_modifier = emf_mod_sandstorms }
						not = { has_province_modifier = emf_mod_desert_rain }
						not = { has_province_modifier = emf_mod_desert_storms }
						# Winter
						not = { has_province_modifier = emf_mod_heavy_snow }
						not = { has_province_modifier = emf_mod_blizzards }
						not = { has_province_modifier = emf_mod_mild_winter }
						not = { has_province_modifier = emf_mod_harsh_winter }
						# Spring
						not = { has_province_modifier = emf_mod_pleasant_spring }
						not = { has_province_modifier = emf_mod_long_winter }
						# Summer
						not = { has_province_modifier = emf_mod_heat_wave }
						not = { has_province_modifier = emf_mod_mild_summer }
						not = { has_province_modifier = emf_mod_cloudy }
						not = { has_province_modifier = emf_mod_bright }
						# Autumn
						not = { has_province_modifier = emf_mod_warm_autumn }
						not = { has_province_modifier = emf_mod_early_winter }
					}
					# Set or remove flags
					if = {
						limit = { not = { has_global_flag = emf_region_invert } }
						set_province_flag = emf_region_sweep
					}
					if = {
						limit = { has_global_flag = emf_region_invert }
						clr_province_flag = emf_region_sweep
					}
					# All provinces get Bright
					add_province_modifier = {
						name = emf_mod_bright
						duration = 80
					}
				}
			}
		}
	}
	
	# Autumn
	option = { # Warm Autumn (warm)
		trigger = {
			month = 8 # At least September
			not = { month = 11 } # Before December
		}
		name = OK
		ai_chance = {
			factor = 1
		}
		
		random_demesne_title = {
			limit = {
				tier = count
				location = { has_province_flag = emf_seasonal_event }
			}
			location = {
				clr_province_flag = emf_seasonal_event
				# All provinces get Warm Autumn
				add_province_modifier = {
					name = emf_mod_warm_autumn
					duration = 80
				}
				any_neighbor_province = {
					limit = {
						# General
						not = { has_province_modifier = emf_mod_heavy_rain_good }
						not = { has_province_modifier = emf_mod_heavy_rain_bad }
						not = { has_province_modifier = emf_mod_storms }
						not = { has_province_modifier = emf_mod_drought }
						# Special
						not = { has_province_modifier = emf_mod_river_flooding }
						not = { has_province_modifier = emf_mod_coastal_flooding }
						not = { has_province_modifier = emf_mod_sandstorms }
						not = { has_province_modifier = emf_mod_desert_rain }
						not = { has_province_modifier = emf_mod_desert_storms }
						# Winter
						not = { has_province_modifier = emf_mod_heavy_snow }
						not = { has_province_modifier = emf_mod_blizzards }
						not = { has_province_modifier = emf_mod_mild_winter }
						not = { has_province_modifier = emf_mod_harsh_winter }
						# Spring
						not = { has_province_modifier = emf_mod_pleasant_spring }
						not = { has_province_modifier = emf_mod_long_winter }
						# Summer
						not = { has_province_modifier = emf_mod_heat_wave }
						not = { has_province_modifier = emf_mod_mild_summer }
						not = { has_province_modifier = emf_mod_cloudy }
						not = { has_province_modifier = emf_mod_bright }
						# Autumn
						not = { has_province_modifier = emf_mod_warm_autumn }
						not = { has_province_modifier = emf_mod_early_winter }
					}
					# Set or remove flags
					if = {
						limit = { not = { has_global_flag = emf_region_invert } }
						set_province_flag = emf_region_sweep
					}
					if = {
						limit = { has_global_flag = emf_region_invert }
						clr_province_flag = emf_region_sweep
					}
					# All provinces get Warm Autumn
					add_province_modifier = {
						name = emf_mod_warm_autumn
						duration = 80
					}
				}
			}
		}
	}
	option = { # Early Winter (cold)
		trigger = {
			month = 8 # At least September
			not = { month = 11 } # Before December
		}
		name = OK
		ai_chance = {
			factor = 1
		}
		
		random_demesne_title = {
			limit = {
				tier = count
				location = { has_province_flag = emf_seasonal_event }
			}
			location = {
				clr_province_flag = emf_seasonal_event
				# All provinces get Early Winter
				add_province_modifier = {
					name = emf_mod_early_winter
					duration = 80
				}
				any_neighbor_province = {
					limit = {
						# General
						not = { has_province_modifier = emf_mod_heavy_rain_good }
						not = { has_province_modifier = emf_mod_heavy_rain_bad }
						not = { has_province_modifier = emf_mod_storms }
						not = { has_province_modifier = emf_mod_drought }
						# Special
						not = { has_province_modifier = emf_mod_river_flooding }
						not = { has_province_modifier = emf_mod_coastal_flooding }
						not = { has_province_modifier = emf_mod_sandstorms }
						not = { has_province_modifier = emf_mod_desert_rain }
						not = { has_province_modifier = emf_mod_desert_storms }
						# Winter
						not = { has_province_modifier = emf_mod_heavy_snow }
						not = { has_province_modifier = emf_mod_blizzards }
						not = { has_province_modifier = emf_mod_mild_winter }
						not = { has_province_modifier = emf_mod_harsh_winter }
						# Spring
						not = { has_province_modifier = emf_mod_pleasant_spring }
						not = { has_province_modifier = emf_mod_long_winter }
						# Summer
						not = { has_province_modifier = emf_mod_heat_wave }
						not = { has_province_modifier = emf_mod_mild_summer }
						not = { has_province_modifier = emf_mod_cloudy }
						not = { has_province_modifier = emf_mod_bright }
						# Autumn
						not = { has_province_modifier = emf_mod_warm_autumn }
						not = { has_province_modifier = emf_mod_early_winter }
					}
					# Set or remove flags
					if = {
						limit = { not = { has_global_flag = emf_region_invert } }
						set_province_flag = emf_region_sweep
					}
					if = {
						limit = { has_global_flag = emf_region_invert }
						clr_province_flag = emf_region_sweep
					}
					# All provinces get Early Winter
					add_province_modifier = {
						name = emf_mod_early_winter
						duration = 80
					}
				}
			}
		}
	}
}

# Hand out other seasonal events
# This is where wolves and rats and stuff go
character_event = {
	id = emf_regional.4
	hide_window = yes
	is_triggered_only = yes
	
	# Shared
	option = { # Rats
		name = OK
		ai_chance = {
			factor = 1
		}
		random_demesne_title = {
			limit = {
				tier = count
				location = { has_province_flag = emf_seasonal_event }
			}
			location = {
				clr_province_flag = emf_seasonal_event
				# Rats in the food supply
				add_province_modifier = {
					name = emf_mod_rats
					duration = 80
				}
			}
		}
	}
	option = { # Wolves
		name = OK
		ai_chance = {
			factor = 1
		}
		random_demesne_title = {
			limit = {
				tier = count
				location = { has_province_flag = emf_seasonal_event }
			}
			location = {
				clr_province_flag = emf_seasonal_event
				# Rats in the food supply
				add_province_modifier = {
					name = emf_mod_wolves
					duration = 80
				}
			}
		}
	}
	# Landslides?
	# Avalanches?
	# Minor Earthquakes?
	# Other?
}
