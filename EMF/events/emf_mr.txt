
namespace = emf_mr


narrative_event = {
	id = emf_mr.1
	desc = emf_mr.1.desc
	title = emf_mr.1.title
	picture = GFX_evt_busy_trading_dock_republic
	border = GFX_event_narrative_frame_diplomacy
	
	is_triggered_only = yes
	
	immediate = {
		capital_scope = {
			duchy = {
				save_event_target_as = mr_duchy
			}
		}
	}
	
	option = {
		name = OK
		ai_chance = { factor = 100 }
		
		hidden_tooltip = {
		
			# Take control of capital duchy
			grant_title_no_opinion = event_target:mr_duchy

			# Shed extra higher-tier titles

			any_demesne_title = {
				limit = {
					not = { lower_tier_than = duke }
					not = { title = event_target:mr_duchy } # Not the capital duchy
				}
				ROOT = {
					random_vassal = {
						limit = {
							ROOT = { not = { has_character_flag = found_owner } }
							higher_tier_than = baron
							is_feudal = yes
							num_of_count_titles = 4
							capital_holding = {
								de_jure_liege_or_above = PREVPREVPREV
								not = { de_jure_liege_or_above = event_target:mr_duchy }
							}
						}
						grant_title_no_opinion = PREVPREV
						ROOT = { set_character_flag = found_owner }
					}
					random_vassal = {
						limit = {
							ROOT = { not = { has_character_flag = found_owner } }
							higher_tier_than = baron
							is_feudal = yes
							num_of_count_titles = 3
							capital_holding = {
								de_jure_liege_or_above = PREVPREVPREV
								not = { de_jure_liege_or_above = event_target:mr_duchy }
							}
						}
						grant_title_no_opinion = PREVPREV
						ROOT = { set_character_flag = found_owner }
					}
					random_vassal = {
						limit = {
							ROOT = { not = { has_character_flag = found_owner } }
							higher_tier_than = baron
							is_feudal = yes
							num_of_count_titles = 2
							capital_holding = {
								de_jure_liege_or_above = PREVPREVPREV
								not = { de_jure_liege_or_above = event_target:mr_duchy }
							}
						}
						grant_title_no_opinion = PREVPREV
						ROOT = { set_character_flag = found_owner }
					}
					random_vassal = {
						limit = {
							ROOT = { not = { has_character_flag = found_owner } }
							higher_tier_than = baron
							is_feudal = yes
							capital_holding = {
								de_jure_liege_or_above = PREVPREVPREV
								not = { de_jure_liege_or_above = event_target:mr_duchy }
							}
						}
						grant_title_no_opinion = PREVPREV
						ROOT = { set_character_flag = found_owner }
					}
					random_realm_lord = {
						limit = {
							ROOT = { not = { has_character_flag = found_owner } }
							higher_tier_than = baron
							is_feudal = yes
							capital_holding = {
								de_jure_liege_or_above = PREVPREVPREV
								not = { de_jure_liege_or_above = event_target:mr_duchy }
							}
						}
						grant_title_no_opinion = PREVPREV
						ROOT = { set_character_flag = found_owner }
					}
					random_playable_ruler = {
						limit = {
							ROOT = { not = { has_character_flag = found_owner } }
							is_feudal = yes
							religion = ROOT
							culture = ROOT
							num_of_count_titles = 3
							capital_holding = {
								de_jure_liege_or_above = PREVPREVPREV
								not = { de_jure_liege_or_above = event_target:mr_duchy }
							}
						}
						grant_title_no_opinion = PREVPREV
						ROOT = { set_character_flag = found_owner }
					}
					random_playable_ruler = {
						limit = {
							ROOT = { not = { has_character_flag = found_owner } }
							is_feudal = yes
							religion = ROOT
							culture = ROOT
							num_of_count_titles = 2
							capital_holding = {
								de_jure_liege_or_above = PREVPREVPREV
								not = { de_jure_liege_or_above = event_target:mr_duchy }
							}
						}
						grant_title_no_opinion = PREVPREV
						ROOT = { set_character_flag = found_owner }
					}
					random_playable_ruler = {
						limit = {
							ROOT = { not = { has_character_flag = found_owner } }
							is_feudal = yes
							religion = ROOT
							culture = ROOT
							capital_holding = {
								de_jure_liege_or_above = PREVPREVPREV
								not = { de_jure_liege_or_above = event_target:mr_duchy }
							}
						}
						grant_title_no_opinion = PREVPREV
						ROOT = { set_character_flag = found_owner }
					}
					random_playable_ruler = {
						limit = {
							ROOT = { not = { has_character_flag = found_owner } }
							is_feudal = yes
							religion_group = ROOT
							capital_holding = {
								de_jure_liege_or_above = PREVPREVPREV
								not = { de_jure_liege_or_above = event_target:mr_duchy }
							}
						}
						grant_title_no_opinion = PREVPREV
						ROOT = { set_character_flag = found_owner }
					}
					random_vassal = {
						limit = {
							ROOT = { not = { has_character_flag = found_owner } }
							higher_tier_than = baron
							capital_holding = {
								de_jure_liege_or_above = PREVPREVPREV
								not = { de_jure_liege_or_above = event_target:mr_duchy }
							}
						}
						grant_title_no_opinion = PREVPREV
						ROOT = { set_character_flag = found_owner }
					}
					random_realm_lord = {
						limit = {
							ROOT = { not = { has_character_flag = found_owner } }
							higher_tier_than = baron
							capital_holding = {
								de_jure_liege_or_above = PREVPREVPREV
								not = { de_jure_liege_or_above = event_target:mr_duchy }
							}
						}
						grant_title_no_opinion = PREVPREV
						ROOT = { set_character_flag = found_owner }
					}
					random_playable_ruler = {
						limit = {
							ROOT = { not = { has_character_flag = found_owner } }
							religion_group = ROOT
							capital_holding = {
								de_jure_liege_or_above = PREVPREVPREV
								not = { de_jure_liege_or_above = event_target:mr_duchy }
							}
						}
						grant_title_no_opinion = PREVPREV
						ROOT = { set_character_flag = found_owner }
					}
					random_playable_ruler = {
						limit = {
							ROOT = { not = { has_character_flag = found_owner } }
							capital_holding = {
								de_jure_liege_or_above = PREVPREVPREV
								not = { de_jure_liege_or_above = event_target:mr_duchy }
							}
						}
						grant_title_no_opinion = PREVPREV
						ROOT = { set_character_flag = found_owner }
					}
					clr_character_flag = found_owner
				}
			}
			
			# Get rid of / transfer vassals outside the capital duchy
			
			any_vassal = {
				limit = {
					higher_tier_than = baron
					capital_holding = {
						not = { de_jure_liege_or_above = event_target:mr_duchy }
					}
				}
				set_defacto_liege = THIS # Independent, worst-case
				ROOT = {
					liege = {
						if = {
							limit = { not = { character = ROOT } }
							set_defacto_vassal = PREVPREV # To our liege, if we're not independent
						}
					}
				}
				capital_scope = {
					kingdom = {
						owner = {
							set_defacto_vassal = PREVPREVPREV # To their kingdom owner, if possible (tier) and owner exists
						}
					}
				}
				capital_scope = {
					duchy = {
						owner = {
							set_defacto_vassal = PREVPREVPREV # To their duchy owner, if possible (tier) and owner exists
						}
					}
				}
			}
			
			# Try to make the capital duchy our primary so that any extra vassals are bound to it and not other titles
			
			event_target:mr_duchy = { make_primary_title = yes }
			
			# Now, do the dangerous thing and just destroy any extra duke-tier or higher titles that we couldn't shed
			# They are probably titular-- hopefully they weren't binding any vassals
			
			any_demesne_title = {
				limit = {
					not = { lower_tier_than = duke }
					not = { title = event_target:mr_duchy }
				}
				destroy_landed_title = THIS
			}

			# Make sure we have control over all de jure titles of capital duchy...
			
			event_target:mr_duchy = {
				any_de_jure_vassal_title = { # County cleanup...
					limit = {
						tier = count
						owner = {
							not = {
								character = ROOT
								is_liege_or_above = ROOT
							}
						}
					}
					if = {
						limit = {
							owner = { higher_tier_than = count }
						}
						grant_title_no_opinion = ROOT # Just take direct control over the county
					}
					if = {
						limit = {
							owner = { tier = count }
						}
						owner = { set_defacto_liege = ROOT } # Vassalize
					}
				}
				any_de_jure_vassal_title = { # Barony cleanup...
					limit = {
						tier = baron
						owner = {
							not = {
								character = ROOT
								is_liege_or_above = ROOT
							}
						}
					}
					if = {
						limit = {
							owner = { higher_tier_than = count }
						}
						dejure_liege_title = {
							owner = {
								grant_title_no_opinion = PREVPREV # Grant it to its county's owner
							}
						}
					}
					if = {
						limit = {
							owner = { tier = count }
						}
						owner = { set_defacto_liege = ROOT } # Vassalize
					}
				}
			}
			
			# Grant our own provinces outside the capital duchy to other, neighboring characters in same realm
			character_event = { id = emf_mr.5 }
			
			# Grant our own remaining provinces outside the capital duchy to other, neighboring characters in a different realm
			character_event = { id = emf_mr.6 }
			
			# Become independent
			
			set_defacto_liege = ROOT
			
			# Make our vassals shed any provinces outside the capital duchy to other, neighboring characters in a different realm
			
			any_vassal = {
				limit = { tier = count }
				character_event = { id = emf_mr.6 }
			}
			
			# Create family palace
			
			create_family_palace = yes
			
			# Make sure we own a city and that it's our capital (we assume our capital county has a city)
			
			capital_scope = {
				county = {
					if = {
						limit = { is_republic = no } # If it is, we assume we own it, so done.
						
						ROOT = {
							if = {
								limit = {
									any_demesne_title = {
										holding_type = city
										de_jure_liege = PREVPREV
									}
								}
								set_character_flag = from_demesne_tmp
							}
						
							if = {
								limit = { has_character_flag = from_demesne_tmp }
								
								random_demesne_title = {
									limit = {
										holding_type = city
										de_jure_liege = PREVPREV # County
									}
									province_capital = yes
									ROOT = {
										capital = PREV
									}
								}
							}
						
							if = {
								limit = { not = { has_character_flag = from_demesne_tmp } }
								
								random_vassal = {
									limit = {
										any_demesne_title = {
											holding_type = city
											de_jure_liege = PREVPREVPREV # County
										}
									}
									random_demesne_title = {
										limit = {
											holding_type = city
											de_jure_liege = PREVPREVPREV # County
										}
										grant_title_no_opinion = ROOT
										province_capital = yes
										ROOT = {
											capital = PREV
										}
									}
								}
							}
						
							clr_character_flag = from_demesne_tmp
						}
					}
				}
			}
			
			# Create a dynasty member to get around situations where we have no valid republican heirs
			# Since we assume that we're an adult, making him age 16 should always work for succession purposes
		
			create_random_steward = {
				random_traits = yes
				dynasty = ROOT
				religion = ROOT
				culture = ROOT
				age = 16
				female = no
			}
			new_character = {
				set_character_flag = fallback_heir
				if = {
					limit = {
						religion_group = indian_group
					}
					add_trait = kshatriya
					character_event = { id = RoI.30121 }
				}
			}

			# Try to make him our ahistorical brother
			
			if = {
				limit = { father_even_if_dead = { always = yes } }
				father_even_if_dead = {
					ROOT = {
						random_courtier = {
							limit = { has_character_flag = fallback_heir }
							set_father = PREVPREV
						}
					}
				}
			}
			if = {
				limit = { mother_even_if_dead = { always = yes } }
				mother_even_if_dead = {
					ROOT = {
						random_courtier = {
							limit = { has_character_flag = fallback_heir }
							set_mother = PREVPREV
						}
					}
				}
			}

			random_courtier = {
				limit = { has_character_flag = fallback_heir }
				clr_character_flag = fallback_heir
			}
			
			# Every family gets 500g to start with, including doge
			
			wealth = 500
			
			# Create 4 patrician families
			
			character_event = { id = emf_mr.2 }
			character_event = { id = emf_mr.2 }
			character_event = { id = emf_mr.2 }
			character_event = { id = emf_mr.2 }

			# Create a custom de jure kingdom title for the MR duchy if we want (avoids de jure claim CBs if want to stay independent)
			
			if = {
				limit = { FROMFROM = { is_alive = yes } }
				FROMFROM = { character_event = { id = emf_mr.4 } }
			}
			if = {
				limit = { not = { FROMFROM = { is_alive = yes } } }
				FROM = { character_event = { id = emf_mr.4 } }
			}
		}
	}
	
	option = {
		name = CANCEL
		ai_chance = { factor = 0 }
	}
}



character_event = {
	id = emf_mr.2
	desc = HIDE_EVENT
	hide_window = yes
	
	is_triggered_only = yes
	
	option = {
		name = OK
		
		random_list = {
			10 = {
				create_random_steward = {
					random_traits = yes
					dynasty = random
					religion = ROOT
					culture = ROOT
					female = no
					age = 34
				}
			}
			10 = {
				create_random_steward = {
					random_traits = yes
					dynasty = random
					religion = ROOT
					culture = ROOT
					female = no
					age = 35
				}
			}
			10 = {
				create_random_steward = {
					random_traits = yes
					dynasty = random
					religion = ROOT
					culture = ROOT
					female = no
					age = 36
				}
			}
			10 = {
				create_random_steward = {
					random_traits = yes
					dynasty = random
					religion = ROOT
					culture = ROOT
					female = no
					age = 37
				}
			}
			10 = {
				create_random_steward = {
					random_traits = yes
					dynasty = random
					religion = ROOT
					culture = ROOT
					female = no
					age = 38
				}
			}
			10 = {
				create_random_steward = {
					random_traits = yes
					dynasty = random
					religion = ROOT
					culture = ROOT
					female = no
					age = 39
				}
			}
			10 = {
				create_random_steward = {
					random_traits = yes
					dynasty = random
					religion = ROOT
					culture = ROOT
					female = no
					age = 40
				}
			}
		}
		new_character = {
			if = {
				limit = {
					religion_group = indian_group
				}
				add_trait = kshatriya
				character_event = { id = RoI.30121 }
			}
			character_event = { id = emf_mr.3 }
		}
	}
}



character_event = {
	id = emf_mr.3
	desc = AI_EVENT
	hide_window = yes
	
	is_triggered_only = yes
	
	option = {
		name = OK
		
#		FROM = {
#			random_realm_lord = {
#				limit = {
#					lower_tier_than = duke
#					is_republic = yes
#					is_patrician = no
#					primary_title = {
#						de_jure_liege_or_above = event_target:mr_duchy
#					}
#				}
#				primary_title = {
#					grant_title_no_opinion = ROOT
#					province_capital = yes
#				}
#			}
#		}
		
		create_family_palace = yes
		wealth = 500
		
		# Create an adult male heir
		
		random_list = {
			10 = {
				create_random_steward = {
					random_traits = yes
					dynasty = ROOT
					religion = ROOT
					culture = ROOT
					female = no
					age = 16
				}
			}
			10 = {
				create_random_steward = {
					random_traits = yes
					dynasty = ROOT
					religion = ROOT
					culture = ROOT
					female = no
					age = 17
				}
			}
			10 = {
				create_random_steward = {
					random_traits = yes
					dynasty = ROOT
					religion = ROOT
					culture = ROOT
					female = no
					age = 18
				}
			}
		}
		
		new_character = {
			set_father = ROOT
			if = {
				limit = {
					religion_group = indian_group
				}
				add_trait = kshatriya
				character_event = { id = RoI.30121 }
			}
		}
	}
}


character_event = {
	id = emf_mr.4
	desc = emf_mr.4.desc
	picture = GFX_evt_doge_republic
	border = GFX_event_normal_frame_diplomacy
	
	is_triggered_only = yes
	hide_new = yes
	
	trigger = {
		FROM = {
			primary_title = { title = event_target:mr_duchy }
		}
	}
	
	option = {
		name = YES
		ai_chance = { factor = 0 }
		
		hidden_tooltip = {
			FROM = {
				primary_title = {
					create_title = {
						tier = KING
						landless = no
						temporary = no
						custom_created = yes
						culture = FROM
						holder = FROM
						base_title = THIS
						copy_title_laws = yes
					}
				}
				
				primary_title = {
					event_target:mr_duchy = {
						de_jure_liege = PREV
					}
				}
			}
		}
	}
	option = {
		name = NO
		ai_chance = { factor = 100 }
	}
}



character_event = {
	id = emf_mr.5
	desc = HIDE_EVENT
	hide_window = yes
	
	is_triggered_only = yes
	
	trigger = {
		any_demesne_title = {
			tier = count
			not = { de_jure_liege = event_target:mr_duchy }
			location = {
				any_neighbor_province = {
					county = {
						not = { de_jure_liege = event_target:mr_duchy }
					}
					owner = {
						same_realm = ROOT
						not = {
							character = ROOT
							is_liege_or_above = ROOT
						}
					}
				}
			}
		}
	}
	
	immediate = {
		random_demesne_title = {
			limit = {
				tier = count
				not = { de_jure_liege = event_target:mr_duchy }
				location = {
					any_neighbor_province = {
						county = {
							not = { de_jure_liege = event_target:mr_duchy }
						}
						owner = {
							same_realm = ROOT
							not = {
								character = ROOT
								is_liege_or_above = ROOT
							}
						}
					}
				}
			}
			save_event_target_as = free_county
		}
	}
	
	option = {
		name = OK
		
		event_target:free_county = {
			location = {
				random_neighbor_province = {
					limit = {
						county = {
							not = { de_jure_liege = event_target:mr_duchy }
						}
						owner = {
							same_realm = ROOT
							not = {
								character = ROOT
								is_liege_or_above = ROOT
							}
						}
					}
					owner = {
						event_target:free_county = {
							grant_title_no_opinion = PREV # Grant the county
							
							# Grant any baronies we own under the county too...
							
							any_de_jure_vassal_title = {
								limit = { owner = { character = ROOT } }
								grant_title_no_opinion = PREVPREV
							}
							
							# Make sure the rest of the baronies are vassal to the new owner, if possible
							
							any_de_jure_vassal = {
								limit = {
									tier = baron
									not = { character = PREVPREV }
								}
								set_defacto_liege = PREVPREV
							}
						}
					}
				}
			}
		}
		
		clear_event_target = free_county
		character_event = { id = emf_mr.5 } # Recurse
	}
}


# emf_mr.6
#
# Same as emf_mr.5, but requires granting to neighboring provinces held outside the realm
# of the ruler. Once the MR is independent, can be used on the doge's vassals to make them
# shed their outside-duchy counties too.
character_event = {
	id = emf_mr.6
	desc = HIDE_EVENT
	hide_window = yes
	
	is_triggered_only = yes
	
	trigger = {
		any_demesne_title = {
			tier = count
			not = { de_jure_liege = event_target:mr_duchy }
			location = {
				any_neighbor_province = {
					county = {
						not = { de_jure_liege = event_target:mr_duchy }
					}
					owner = {
						not = { same_realm = ROOT }
					}
				}
			}
		}
	}
	
	immediate = {
		random_demesne_title = {
			limit = {
				tier = count
				not = { de_jure_liege = event_target:mr_duchy }
				location = {
					any_neighbor_province = {
						county = {
							not = { de_jure_liege = event_target:mr_duchy }
						}
						owner = {
							not = { same_realm = ROOT }
						}
					}
				}
			}
			save_event_target_as = free_county
		}
	}
	
	option = {
		name = OK
		
		event_target:free_county = {
			location = {
				random_neighbor_province = {
					limit = {
						county = {
							not = { de_jure_liege = event_target:mr_duchy }
						}
						owner = {
							not = { same_realm = ROOT }
						}
					}
					owner = {
						event_target:free_county = {
							grant_title_no_opinion = PREV # Grant the county
							
							# Grant any baronies we own under the county too...
							
							any_de_jure_vassal_title = {
								limit = { owner = { character = ROOT } }
								grant_title_no_opinion = PREVPREV
							}
							
							# Make sure the rest of the baronies are vassal to the new owner, if possible
							
							any_de_jure_vassal = {
								limit = {
									tier = baron
									not = { character = PREVPREV }
								}
								set_defacto_liege = PREVPREV
							}
						}
					}
				}
			}
		}
		
		clear_event_target = free_county
		character_event = { id = emf_mr.6 } # Recurse
	}
}
