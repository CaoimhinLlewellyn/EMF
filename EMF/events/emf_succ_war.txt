
# Succession wars [scripted]

namespace = emf_succ_war

# emf_succ_war.0 [Ruler]
#
# Invoked on first day of a character's new reign after succession.
character_event = {
	id = emf_succ_war.0
	desc = HIDE_EVENT
	hide_window = yes
	is_triggered_only = yes
	
	trigger = {
		primary_title = {
			is_landless_type_title = no
		}
	}
	
	immediate = {
		primary_title = {
			save_event_target_as = target_title
			
			any_claimant = {
				log = "[This.GetFullName]: considering [This.GetHerHis] claim..."
				character_event = { id = emf_succ_war.1 }
			}
		}
		
		character_event = { id = emf_succ_war.3 }
		
		# Cleanup
		
		if = {
			limit = { has_character_flag = ai_rsz_calc }
			any_vassal = {
				limit = {
					limit = {
						ai = yes
						higher_tier_than = baron
						is_landed = yes
					}
					set_variable = { which = rsz value = 0 }
				}
			}
		}
	}
}

# emf_succ_war.1 [Claimant]
#
# Title is event_target:target_title. FROM is holder.
character_event = {
	id = emf_succ_war.1
	desc = HIDE_EVENT
	hide_window = yes
	is_triggered_only = yes
	
	trigger = {
		# Are we a valid PWK (Potential Wannabe King)?
		is_adult = yes
		ai = yes
		is_theocracy = no
		is_republic = no
		not = {
			# Not a parent of the current ruler or a child of the current ruler
			FROM = { father = { character = ROOT } }
			FROM = { mother = { character = ROOT } }
			is_child_of = FROM
			is_friend = FROM
			trait = monk
			trait = nun
			trait = blinded
			trait = eunuch
			trait = incapable
			opinion = { who = FROM value = 75 }
		}
		or = {
			is_female = no
			and = {
				not = { religion_group = muslim }
				event_target:target_title = {
					succ_law_title = {
						not = { has_law = agnatic_succession }
					}
				}
				not = { any_spouse = { character = FROM } }
				not = { age = 40 } # No old women
			}
		}
		event_target:target_title = {
			not = {
				any_war = {
					attacker = { character = ROOT }
				}
			}
		}
		or = {
			has_strong_claim = event_target:target_title
			event_target:target_title = { is_pretender = yes }
			FROM = { has_regent = yes }
			and = {
				is_female = no
				FROM = { is_female = yes }
			}
			and = {
				is_landed = yes
				is_close_relative = FROM
			}
		}
	}
	
	immediate = {
		log = "PWK: '[Root.GetFullName]' from realm '[Root.Realm.GetFullName]'"
	}
	
	option = {
		name = YES
		ai_chance = {
			factor = 20
			
			modifier = {
				factor = 4
				is_foe = FROM
			}
			modifier = {
				factor = 2
				is_landed = yes
			}
			modifier = {
				factor = 2
				trait = ambitious
			}
			modifier = {
				factor = 1.75
				trait = envious
			}
			modifier = {
				factor = 1.5
				trait = arbitrary
			}
			modifier = {
				factor = 1.5
				trait = deceitful
			}
			modifier = {
				factor = 1.25
				trait = proud
			}
			modifier = {
				factor = 1.25
				trait = greedy
			}
			modifier = {
				factor = 1.25
				trait = wroth
			}
			modifier = {
				factor = 1.25
				trait = brave
			}
			modifier = {
				factor = 0.75
				trait = craven
			}
			modifier = {
				factor = 0.75
				trait = honest
			}
			modifier = {
				factor = 0.5
				trait = humble
			}
			modifier = {
				factor = 0.1
				trait = just
			}
			modifier = {
				factor = 0.1
				trait = content
			}
			modifier = {
				factor = 0.8
				opinion = { who = FROM value = 0 }
			}
			modifier = {
				factor = 0.8
				opinion = { who = FROM value = 20 }
			}
			modifier = {
				factor = 0.8
				opinion = { who = FROM value = 40 }
			}
			modifier = {
				factor = 0.8
				opinion = { who = FROM value = 60 }
			}
			modifier = {
				factor = 1.333
				not = { opinion = { who = FROM value = 0 } }
			}
			modifier = {
				factor = 1.333
				not = { opinion = { who = FROM value = -20 } }
			}
			modifier = {
				factor = 1.333
				not = { opinion = { who = FROM value = -40 } }
			}
			modifier = {
				factor = 1.333
				not = { opinion = { who = FROM value = -60 } }
			}
			modifier = {
				factor = 1.333
				not = { opinion = { who = FROM value = -80 } }
			}
		}
		
		reverse_opinion = { who = FROM modifier = opinion_emf_succ_war_pwk }
		
		log = "Chose to poll for support..."
		
		FROM = { character_event = { id = emf_succ_war.4 } } # Calc realm size for all AI vassals
	
		if = {
			limit = {
				vassal_of = FROM
				higher_tier_than = baron
				is_landed = yes
				prisoner = no
			}
			# We automatically count ourselves as part of the prospective succ_claimant faction
			# if we qualify to be in the faction.
			
			set_variable = { which = ai_rsz_support which = rsz }
			
			log = "Counted self in ai_rsz_support: [This.ai_rsz_support.GetValue]"
		}
		
		FROM = {
			any_vassal = {
				limit = {
					not = { character = ROOT }
					ai = yes
					higher_tier_than = baron
					is_landed = yes
					prisoner = no
				}
				character_event = { id = emf_succ_war.2 }
			}
		}
		
		log = "ai_rsz_support: [This.ai_rsz_support.GetValue]"
		
		set_variable = { which = ai_rsz which = FROM }
		divide_variable = { which = ai_rsz_support which = ai_rsz }
		
		log = "Ratio to total AI realm size: [This.ai_rsz.GetValue]"
		
		# Cleanup
		set_variable = { which = ai_rsz_support value = 0 }
		set_variable = { which = ai_rsz value = 0 }
	}
	
	option = {
		name = NO
		trigger = { always = no }
		ai_chance = {
			factor = 100
		}
	}
}


# emf_succ_war.2 [Playable, Direct Vassal of Ruler]
#
character_event = {
	id = emf_succ_war.2
	desc = HIDE_EVENT
	hide_window = yes
	is_triggered_only = yes

	option = {
		name = YES
		ai_chance = {
			factor = 100
		}
		change_variable = { which = ai_rsz_support which = rsz }
		FROM = {
			change_variable = { which = ai_rsz_support which = ROOT }
		}
		set_variable = { which = ai_rsz_support value = 0 }
	}
	
	option = {
		name = NO
		ai_chance = {
			factor = 10
		}
	}
}


# emf_succ_war.3 [Ruler]
#
# 
character_event = {
	id = emf_succ_war.3
	desc = HIDE_EVENT
	hide_window = yes
	is_triggered_only = yes
	
	trigger = {
		any_opinion_modifier_target = {
			reverse_has_opinion_modifier = { who = ROOT modifier = opinion_emf_succ_war_pwk }
		}
	}
	
	option = {
		name = OK
		random_opinion_modifier_target = {
			limit = {
				reverse_has_opinion_modifier = { who = ROOT modifier = opinion_emf_succ_war_pwk }
			}
			log = "PWK: '[This.GetFullName]' from realm '[This.Realm.GetFullName]'"
			reverse_remove_opinion = { who = ROOT modifier = opinion_emf_succ_war_pwk }
		}
		character_event = { id = emf_succ_war.3 }
	}
}

# emf_succ_war.4 [Ruler]
#
# 
character_event = {
	id = emf_succ_war.4
	desc = HIDE_EVENT
	hide_window = yes
	is_triggered_only = yes
	
	trigger = {
		not = { has_character_flag = ai_rsz_calc }
	}
	
	option = {
		name = OK

		set_character_flag = ai_rsz_calc
		
		log = "Calculating total AI realm size under ruler..."
		
		any_vassal = {
			limit = {
				ai = yes
				higher_tier_than = baron
				is_landed = yes
			}
			
			character_event = { id = emf_succ_war.1000 } # Calc variable 'rsz'
		}
		
		log = "Total AI realm size: [Root.ai_rsz.GetValue]"
	}
}
