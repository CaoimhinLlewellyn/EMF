
# Succession wars [scripted]

namespace = emf_succ_war

# emf_succ_war.0 [Ruler]
#
# Invoked on first day of a character's new reign after succession.
character_event = {
	id = emf_succ_war.0
	desc = HIDE_EVENT
	hide_window = yes
	is_triggered_only = yes
	
	trigger = {
		primary_title = {
			is_landless_type_title = no
			is_vice_royalty = no
		}
	}
	
	immediate = {
		primary_title = {
			save_event_target_as = target_title
			
			any_claimant = {
				log = "[This.GetFullName]: considering [This.GetHerHis] claim..."
				character_event = { id = emf_succ_war.1 }
			}
		}
		
		# Recurse through claimants that are Potential Wannabe Kings...
		character_event = { id = emf_succ_war.3 }
		
		# Cleanup
		
		#clr_character_flag = emf_succ_war
		
		if = {
			limit = { has_character_flag = ai_rsz_calc }
			
			clr_character_flag = ai_rsz_calc
			
			any_vassal = {
				limit = {
					limit = {
						ai = yes
						higher_tier_than = baron
						is_landed = yes
					}
					set_variable = { which = rsz value = 0 }
				}
			}
			
			set_variable = { which = ai_rsz value = 0 }
		}
	}
}

# emf_succ_war.1 [Claimant]
#
# Title is event_target:target_title. FROM is holder.
character_event = {
	id = emf_succ_war.1
	desc = HIDE_EVENT
	hide_window = yes
	is_triggered_only = yes
	
	trigger = {
		# Are we a valid PWK (Potential Wannabe King)?
		is_adult = yes
		prisoner = no
		is_theocracy = no
		is_republic = no
		ai = yes # For now.
		not = {
			# Not a parent of the current ruler or a child of the current ruler or a friend
			FROM = { father = { character = ROOT } }
			FROM = { mother = { character = ROOT } }
			is_child_of = FROM
			is_friend = FROM
			# None of these obviously-disqualifying traits
			trait = monk
			trait = nun
			trait = blinded
			trait = eunuch
			trait = incapable
			# Never if they like the current ruler a lot
			opinion = { who = FROM value = 75 }
		}
		or = {
			same_realm = FROM
			FROM = { independent = yes }
		}
		or = {
			is_female = no
			and = {
				not = { religion_group = muslim } # No muslim female claimants
				event_target:target_title = {
					succ_law_title = {
						not = { has_law = agnatic_succession }
					}
				}
				not = { any_spouse = { character = FROM } } # Keep the marital troubles behind closed doors
				not = { age = 40 } # No old women
			}
		}
		event_target:target_title = {
			not = {
				any_war = {
					attacker = { character = ROOT }
				}
			}
		}
		or = {
			has_strong_claim = event_target:target_title
			event_target:target_title = { is_pretender = yes }
			FROM = { has_regent = yes }
			and = {
				is_female = no
				FROM = { is_female = yes }
			}
			and = { # For succession claims, we allow these extra weak claimants to be considered...
				is_landed = yes
				is_close_relative = FROM
			}
		}
	}
	
	immediate = {
		reverse_opinion = { who = FROM modifier = opinion_emf_succ_war_pwk }
	}
	
	option = { name = OK }
}


# emf_succ_war.2 [Playable, Direct Vassal of Ruler]
#
character_event = {
	id = emf_succ_war.2
	desc = HIDE_EVENT
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		or = {
			not = { liege = { religion_group = ROOT } }
			religion_group = FROM
		}
		not = { opinion = { who = LIEGE value = 80 } }
		opinion_diff = {
			first = FROM
			second = LIEGE
			value = 20
			as_if_liege = yes
		}
	}
	
	option = {
		name = YES
		ai_chance = {
			factor = 50
			
			modifier = {
				factor = 1.333
				opinion_diff = {
					first = FROM
					second = LIEGE
					value = 30
					as_if_liege = yes
				}
			}
			modifier = {
				factor = 1.333
				opinion_diff = {
					first = FROM
					second = LIEGE
					value = 40
					as_if_liege = yes
				}
			}
			modifier = {
				factor = 1.333
				opinion_diff = {
					first = FROM
					second = LIEGE
					value = 50
					as_if_liege = yes
				}
			}
			modifier = {
				factor = 1.333
				opinion_diff = {
					first = FROM
					second = LIEGE
					value = 60
					as_if_liege = yes
				}
			}
			modifier = {
				factor = 1.333
				opinion_diff = {
					first = FROM
					second = LIEGE
					value = 70
					as_if_liege = yes
				}
			}
			modifier = {
				factor = 1.333
				opinion_diff = {
					first = FROM
					second = LIEGE
					value = 80
					as_if_liege = yes
				}
			}
			modifier = {
				factor = 1.5
				dynasty = FROM
				not = { liege = { dynasty = ROOT } }
			}
			modifier = {
				factor = 1.5
				trait = arbitrary
			}
			modifier = {
				factor = 1.25
				trait = deceitful
			}
			modifier = {
				factor = 1.25
				trait = brave
			}
		}
		
		set_variable = { which = ai_rsz_support which = rsz }
		FROM = {
			change_variable = { which = ai_rsz_support which = ROOT }
		}
		set_variable = { which = ai_rsz_support value = 0 }
		
		opinion = { who = FROM modifier = opinion_emf_succ_war_supported }
	}
	
	option = {
		name = NO
		ai_chance = {
			factor = 50
			
			modifier = {
				factor = 2
				trait = just
			}
			modifier = {
				factor = 1.5
				trait = content
			}
			modifier = {
				factor = 1.25
				trait = honest
			}
			modifier = {
				factor = 1.25
				trait = craven
			}
			modifier = {
				factor = 1.5
				not = { dynasty = FROM }
				liege = { dynasty = ROOT }
			}
			modifier = {
				factor = 3
				not = { religion = FROM }
			}
			modifier = {
				factor = 2
				not = { culture_group = FROM }
			}
			modifier = {
				factor = 1.5
				not = { culture = FROM }
			}
		}
	}
}


# emf_succ_war.3 [Ruler]
#
# 
character_event = {
	id = emf_succ_war.3
	desc = HIDE_EVENT
	hide_window = yes
	is_triggered_only = yes
	
	trigger = {
		any_opinion_modifier_target = {
			reverse_has_opinion_modifier = { who = ROOT modifier = opinion_emf_succ_war_pwk }
		}
	}
	
	option = {
		name = OK
		random_opinion_modifier_target = {
			limit = {
				reverse_has_opinion_modifier = { who = ROOT modifier = opinion_emf_succ_war_pwk }
			}		
			reverse_remove_opinion = { who = ROOT modifier = opinion_emf_succ_war_pwk }
			character_event = { id = emf_succ_war.5 } # Do they want to be king?
		}
		character_event = { id = emf_succ_war.3 }
	}
}

# emf_succ_war.4 [Ruler]
#
# 
character_event = {
	id = emf_succ_war.4
	desc = HIDE_EVENT
	hide_window = yes
	is_triggered_only = yes
	
	trigger = {
		not = { has_character_flag = ai_rsz_calc }
	}
	
	option = {
		name = OK

		set_character_flag = ai_rsz_calc
		
		log = "Calculating total AI realm size under ruler..."
		
		any_vassal = {
			limit = {
				ai = yes
				higher_tier_than = baron
				is_landed = yes
			}
			
			character_event = { id = emf_succ_war.1000 } # Calc variable 'rsz'
		}
		
		log = "Total AI realm size: [Root.ai_rsz.GetValue]"
	}
}

# emf_succ_war.5 [Claimant]
#
# Do I want to be king?
# If so, do I have enough support?
character_event = {
	id = emf_succ_war.5
	desc = AI_EVENT
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		FROM = { not = { has_character_flag = emf_succ_war } }
	}
	
	option = {
		name = YES
		ai_chance = {
			factor = 20
			
			modifier = {
				factor = 5
				is_foe = FROM
			}
			modifier = {
				factor = 2
				FROM = {
					primary_title = {
						ROOT = {
							has_strong_claim = PREV
						}
					}
				}
			}
			modifier = {
				factor = 2
				is_landed = yes
			}
			modifier = {
				factor = 2
				trait = ambitious
			}
			modifier = {
				factor = 1.75
				trait = envious
			}
			modifier = {
				factor = 1.5
				trait = arbitrary
			}
			modifier = {
				factor = 1.5
				trait = deceitful
			}
			modifier = {
				factor = 1.25
				trait = proud
			}
			modifier = {
				factor = 1.25
				trait = greedy
			}
			modifier = {
				factor = 1.25
				trait = wroth
			}
			modifier = {
				factor = 1.25
				trait = brave
			}
			modifier = {
				factor = 0.75
				trait = craven
			}
			modifier = {
				factor = 0.75
				trait = honest
			}
			modifier = {
				factor = 0.5
				trait = humble
			}
			modifier = {
				factor = 0.25
				trait = just
			}
			modifier = {
				factor = 0.2
				is_female = yes
				FROM = {
					is_female = no
					is_adult = yes
				}
			}
			modifier = {
				factor = 0.1
				trait = content
			}
			modifier = {
				factor = 0.8
				opinion = { who = FROM value = 0 }
			}
			modifier = {
				factor = 0.8
				opinion = { who = FROM value = 20 }
			}
			modifier = {
				factor = 0.8
				opinion = { who = FROM value = 40 }
			}
			modifier = {
				factor = 0.8
				opinion = { who = FROM value = 60 }
			}
			modifier = {
				factor = 1.3
				not = { opinion = { who = FROM value = 0 } }
			}
			modifier = {
				factor = 1.3
				not = { opinion = { who = FROM value = -20 } }
			}
			modifier = {
				factor = 1.3
				not = { opinion = { who = FROM value = -40 } }
			}
			modifier = {
				factor = 1.3
				not = { opinion = { who = FROM value = -60 } }
			}
			modifier = {
				factor = 1.3
				not = { opinion = { who = FROM value = -80 } }
			}
		}
		
		if = {
			limit = { is_ruler = yes }
			log = "WK: '[This.GetFullName]' / title: '[This.PrimaryTitle.GetFullName]' (realm: '[This.Realm.GetFullName]')"
		}
		if = {
			limit = { is_ruler = no }
			log = "WK: '[This.GetFullName]' / (realm: '[This.Realm.GetFullName]')"
		}
		
		log = "Chose to poll for support..."
		
		FROM = { character_event = { id = emf_succ_war.4 } } # Calc realm size for all AI vassals (once)

		if = {
			limit = { FROM = { not = { check_variable = { which = ai_rsz value = 0.1 } } } }
			break = yes # Nobody to poll
		}
		
		set_variable = { which = ai_rsz_support value = 0 }
	
		if = {
			limit = {
				vassal_of = FROM
				higher_tier_than = baron
				is_landed = yes
			}
			# We automatically count ourselves as part of the prospective succ. claimant faction
			# if we qualify to be in the faction.
			
			set_variable = { which = ai_rsz_support which = rsz }
			
			log = "Counted self in ai_rsz_support: [Root.ai_rsz_support.GetValue]"
		}
		
		FROM = {
			any_vassal = {
				limit = {
					not = { character = ROOT }
					ai = yes
					higher_tier_than = baron
					is_landed = yes
					prisoner = no
					not = { trait = incapable }
				}
				character_event = { id = emf_succ_war.2 }
			}
		}
		
		log = "ai_rsz_support: [Root.ai_rsz_support.GetValue]"
		
		set_variable = { which = ai_rsz which = FROM }
		divide_variable = { which = ai_rsz_support which = ai_rsz }
		
		log = "Ratio to total AI realm size: [Root.ai_rsz_support.GetValue]"
		
		if = {
			limit = {
				not = { check_variable = { which = ai_rsz_support value = 0.25 } }
			}
			
			# Cancel the war
			
			log = "Insufficient support for a succession claim... Canceling..."
			
			FROM = {
				any_vassal = {
					remove_opinion = { who = ROOT modifier = opinion_emf_succ_war_supported }
				}
			}
		}
		if = {
			limit = {
				check_variable = { which = ai_rsz_support value = 0.25 }
			}
			
			# WAR! Well, first, we've cleared the way for a jumped-up faction...
			
			log = "[Root.GetTitledName] has a succession claim worthy of war..."
			
			FROM = {
				set_character_flag = emf_succ_war
				
				opinion = { who = ROOT modifier = opinion_emf_succ_war_pretender }
				
				# Send a notification event to the liege
				character_event = { id = emf_succ_war.10 days = 21 }
			}
			
			# Launch the war
			character_event = { id = emf_succ_war.6 days = 100 }
		}
		
		# Cleanup
		set_variable = { which = ai_rsz_support value = 0 }
		set_variable = { which = ai_rsz value = 0 }
	}
	
	option = {
		name = NO
		ai_chance = {
			factor = 80
		}
	}
}


# emf_succ_war.6 [Pretender]
#
# Time to launch the war. Find the actual faction leader, and then
# have them take care of it.
# 
# FROM = Pretender, FROMFROM = Ruler
character_event = {
	id = emf_succ_war.6
	desc = AI_EVENT
	hide_window = yes
	is_triggered_only = yes
	
	option = {
		name = OK
		
		if = {
			limit = {
				FROMFROM = {
					or = {
						not = { has_character_flag = emf_succ_war }
						not = { has_opinion_modifier = { who = ROOT modifier = opinion_emf_succ_war_pretender } }
						not = {
							any_demesne_title = {
								title = event_target:target_title
							}
						}
					}
				}
			}
			# Shit's gone wacky. Call it off.
			log = "succ_war: Succession war state lost..."
			FROMFROM = { clr_character_flag = emf_succ_war }
			break = yes
		}

		if = {
			limit = {
				vassal_of = FROMFROM
				leads_faction = faction_succ_war_claimant
			}
			log = "succ_war: Pretender was faction leader..."
			character_event = { id = emf_succ_war.7 }
			break = yes
		}
		
		FROMFROM = {
			random_vassal = {
				limit = {
					leads_faction = faction_succ_war_claimant
					has_opinion_modifier = { who = ROOT modifier = opinion_emf_succ_war_supported }
				}
				log = "succ_war: Faction leader was someone else..."
				character_event = { id = emf_succ_war.7 }
				break = yes
			}
		}
		
		# If we get here, we couldn't locate the faction leader, so something went wacky.
		# Call it off.
		
		log = "succ_war: Couldn't locate faction leader... Calling it off."
		FROMFROM = { clr_character_flag = emf_succ_war }
	}
}

# emf_succ_war.7 [Faction Leader]
#
# Launch war. Normally, we'd send a letter to our liege here too, but meh for now.
#
# FROM = Pretender
character_event = {
	id = emf_succ_war.7
	desc = AI_EVENT
	hide_window = yes
	is_triggered_only = yes
	
	option = {
		name = OK
		log = "succ_war: Faction leader is '[Root.GetTitledName]'"
	
		opinion = {
			modifier = opinion_fought_for_claimant
			who = FROM
			years = 20
		}
		any_faction_backer = {
			faction = faction_succ_war_claimant
			opinion = {
				modifier = opinion_fought_for_claimant
				who = FROM
				years = 20
			}
		}

		set_character_flag = emf_succ_war_leader
		
		if = {
			limit = { FROM = { character = ROOT } }
			log = "succ_war: Launching emf_succ_war..."
			
			faction_succ_war_claimant = { # The target (title) of the faction
				reverse_war = {
					target = ROOT
					casus_belli = emf_succ_war
					faction = faction_succ_war_claimant
				}
			}
		}

		if = {
			limit = { not = { FROM = { character = ROOT } } }
			log = "succ_war: Launching emf_succ_war_other..."
			
			faction_succ_war_claimant = { # The target (title) of the faction
				reverse_war = {
					target = ROOT
					casus_belli = emf_succ_war_other
					faction = faction_succ_war_claimant
				}
			}
		}
		
		clr_character_flag = emf_succ_war_leader
		liege = { clr_character_flag = emf_succ_war }
	}
}

# emf_succ_war.10 [Ruler]
#
# Pick and then show some kind of intrigue flavor to the ruler informing them that
# something is afoot on the behalf of FROM.
character_event = {
	id = emf_succ_war.10
	desc = HIDE_EVENT
	picture = GFX_evt_emissary
	is_triggered_only = yes
	
	option = {
		name = CURSES
	}
}
